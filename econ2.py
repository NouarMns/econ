
import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
from PIL import Image
import numpy as np

# ุชุนููู ุงูุนููุงู ูุงูุชุฎุทูุท
st.set_page_config(
    page_title="ูุณุงุฑ ุงูุชุฎุตุต ูู ุงูููุงุณ ุงูุงูุชุตุงุฏู ูุนูู ุงูุจูุงูุงุช",
    page_icon="๐",
    layout="wide"
)

# ุชุญุฏูุฏ ุงูููุท ุงูุนุงู ููุตูุญุฉ
st.markdown("""
<style>
    @import url('https://fonts.googleapis.com/css2?family=Tajawal:wght@400;700&display=swap');

    * {
        font-family: 'Tajawal', sans-serif;
    }

    h1, h2, h3, h4, h5, h6 {
        color: #1E3A8A;
        font-weight: 700;
        text-align: right;
    }

    p, li {
        text-align: right;
        font-size: 18px;
        line-height: 1.6;
    }

    .main {
        direction: rtl;
    }

    .stTabs [data-baseweb="tab-list"] {
        direction: rtl;
    }

    .stTabs [data-baseweb="tab"] {
        font-size: 20px;
        font-weight: bold;
    }

    .resource-card {
        background-color: #f8f9fa;
        border-radius: 10px;
        padding: 15px;
        margin: 10px 0;
        border-right: 5px solid #4361ee;
    }

    .section-container {
        background-color: #ffffff;
        border-radius: 10px;
        padding: 20px;
        margin: 10px 0;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }

    .highlighted {
        background-color: #e6f3ff;
        padding: 10px;
        border-radius: 5px;
        border-right: 3px solid #3182ce;
    }
</style>
""", unsafe_allow_html=True)

# ุงูุนููุงู ุงูุฑุฆูุณู
st.markdown("<h1 style='text-align: center;'>ุงูุฏููู ุงูุดุงูู ููุชุฎุตุต ูู ุงูููุงุณ ุงูุงูุชุตุงุฏู ูุนูู ุงูุจูุงูุงุช</h1>",
            unsafe_allow_html=True)
st.markdown("<p style='text-align: center; font-size: 20px;'>ุฎุฑูุทุฉ ุทุฑูู ูุชูุงููุฉ ููุจุงุญุซูู ูุงููุชุฎุตุตูู ุงูุทููุญูู</p>",
            unsafe_allow_html=True)

# ุฅูุดุงุก ุชุจููุจุงุช ููุชููู ุจูู ุงูุฃูุณุงู ุงููุฎุชููุฉ
tabs = st.tabs([
    "ูุธุฑุฉ ุนุงูุฉ",
    "ุงูููุงุณ ุงูุงูุชุตุงุฏู",
    "ุนูู ุงูุจูุงูุงุช",
    "ุงููุณุงุฑุงุช ุงูุชุนููููุฉ",
    "ุงูููุงุฑุงุช ุงููุทููุจุฉ",
    "ุงููุตุงุฏุฑ ูุงููุฑุงุฌุน"
])

# ุงูุชุจููุจ ุงูุฃูู: ูุธุฑุฉ ุนุงูุฉ
with tabs[0]:
    st.markdown("<h2>ููุฏูุฉ ูู ุนูู ุงูุจูุงูุงุช ูุงูููุงุณ ุงูุงูุชุตุงุฏู</h2>", unsafe_allow_html=True)

    col1, col2 = st.columns([3, 2])

    with col1:
        st.markdown("""
        ุชุชูุงุทุน ูุฌุงูุงุช ุงูููุงุณ ุงูุงูุชุตุงุฏู ูุชุญููู ุงูุจูุงูุงุช ูุนูู ุงูุจูุงูุงุช ูู ูุซูุฑ ูู ุงูููุงุทุ ูุชุดูู ูุนูุง ูุฌููุนุฉ ูุชูุงููุฉ ูู ุงูููุงุฑุงุช ุงููุทููุจุฉ ุจุดุฏุฉ ูู ุณูู ุงูุนูู ุงูุญุฏูุซ.

        ุฅู ููู ุงูุนูุงูุฉ ุจูู ูุฐู ุงููุฌุงูุงุช ูุงูุชุณุงุจ ุงูููุงุฑุงุช ุงููุงุฒูุฉ ููู ูููุง ูููู ุฃู ููุชุญ ุขูุงููุง ูุงุณุนุฉ ูู ุนุงูู ุงูุจุญุซ ุงูุนููู ูุงูุชุทุจููุงุช ุงูุนูููุฉ ูู ูุฎุชูู ุงููุทุงุนุงุช.
        """)

        st.markdown('<div class="highlighted">', unsafe_allow_html=True)
        st.markdown("""
        **ููุงุญุธุฉ ูุงูุฉ**: ูุชุทูุจ ุงูุชููุฒ ูู ูุฐู ุงููุฌุงูุงุช ูุฒูุฌูุง ูู ุงูุฃุณุณ ุงููุธุฑูุฉ ุงููููุฉ ูุงูุฎุจุฑุฉ ุงูุนูููุฉ ุงููุณุชูุฑุฉ. ูุฐุง ุงูุฏููู ููุฏู ุฅูู ุชูุฏูู ุฎุงุฑุทุฉ ุทุฑูู ูุชูุงููุฉ ุชุณุงุนุฏู ุนูู ุจูุงุก ูุณุงุฑ ูููู ูุงุฌุญ.
        """)
        st.markdown('</div>', unsafe_allow_html=True)

    with col2:
        # ุฅูุดุงุก ูุฎุทุท ุฏุงุฆุฑู ูุชูุถูุญ ุชุฏุงุฎู ุงููุฌุงูุงุช
        labels = ['ุงูุฅุญุตุงุก', 'ุงูุงูุชุตุงุฏ', 'ุนููู ุงูุญุงุณุจ', 'ุงูุฑูุงุถูุงุช', 'ูุนุฑูุฉ ุงููุฌุงู']
        values = [25, 20, 25, 15, 15]
        colors = ['#4361ee', '#3a0ca3', '#7209b7', '#f72585', '#4cc9f0']

        fig = px.pie(
            values=values,
            names=labels,
            title="ุงูููุงุฑุงุช ุงูุฃุณุงุณูุฉ ุงููุทููุจุฉ",
            color_discrete_sequence=colors,
            hole=0.4
        )
        fig.update_layout(
            font=dict(size=14, family="Tajawal"),
            legend=dict(orientation="h", y=-0.1)
        )
        st.plotly_chart(fig, use_container_width=True)

    # ููุงุฑูุฉ ุจูู ุงููุฌุงูุงุช
    st.markdown("<h3>ููุงุฑูุฉ ุจูู ุงููุฌุงูุงุช ุงูุซูุงุซุฉ</h3>", unsafe_allow_html=True)

    comparison_data = {
        'ุงููุฌุงู': ['ุงูููุงุณ ุงูุงูุชุตุงุฏู', 'ุชุญููู ุงูุจูุงูุงุช', 'ุนูู ุงูุจูุงูุงุช'],
        'ุงูุชุฑููุฒ ุงูุฃุณุงุณู': [
            'ุชุญููู ุงูุจูุงูุงุช ุงูุงูุชุตุงุฏูุฉ ูุงุฎุชุจุงุฑ ุงููุธุฑูุงุช ุงูุงูุชุตุงุฏูุฉ',
            'ุงุณุชุฎุฑุงุฌ ุงูุฑุคู ูุงูุงุชุฌุงูุงุช ูู ุงูุจูุงูุงุช',
            'ุจูุงุก ุงูููุงุฐุฌ ุงูุชูุจุคูุฉ ูุงูุฎูุงุฑุฒููุงุช ุงููุชูุฏูุฉ'
        ],
        'ุงูููุงุฑุงุช ุงูุฃุณุงุณูุฉ': [
            'ุฅุญุตุงุกุ ุงูุชุตุงุฏุ ููุฐุฌุฉ ููุงุณูุฉ',
            'ุฅุญุตุงุกุ ุจุฑูุฌุฉุ ุชุตูุฑ ุงูุจูุงูุงุช',
            'ุฅุญุตุงุกุ ุชุนูู ุขููุ ุจุฑูุฌุฉ ูุชูุฏูุฉ'
        ],
        'ุงูุฃุฏูุงุช': [
            'R, STATA, EViews, Python',
            'SQL, Excel, Power BI, Tableau, Python',
            'Python, R, TensorFlow, PyTorch, Spark'
        ]
    }

    df_comparison = pd.DataFrame(comparison_data)

    st.table(df_comparison.set_index('ุงููุฌุงู'))

    # ูุฎุทุท ุชุทูุฑ ุงูุทูุจ ุนูู ุงูููุงุฑุงุช
    st.markdown("<h3>ุชุทูุฑ ุงูุทูุจ ุนูู ุงูููุงุฑุงุช ูู ุณูู ุงูุนูู</h3>", unsafe_allow_html=True)

    years = [2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025]
    econometrics = [70, 75, 80, 83, 85, 88, 90, 92]
    data_analysis = [75, 82, 88, 92, 95, 97, 98, 99]
    data_science = [80, 85, 90, 93, 95, 97, 98, 99]

    fig = go.Figure()

    fig.add_trace(go.Scatter(
        x=years, y=econometrics,
        mode='lines+markers',
        name='ุงูููุงุณ ุงูุงูุชุตุงุฏู',
        line=dict(color='#4361ee', width=3)
    ))

    fig.add_trace(go.Scatter(
        x=years, y=data_analysis,
        mode='lines+markers',
        name='ุชุญููู ุงูุจูุงูุงุช',
        line=dict(color='#3a0ca3', width=3)
    ))

    fig.add_trace(go.Scatter(
        x=years, y=data_science,
        mode='lines+markers',
        name='ุนูู ุงูุจูุงูุงุช',
        line=dict(color='#7209b7', width=3)
    ))

    fig.update_layout(
        title='ุชุทูุฑ ุงูุทูุจ ุนูู ุงูููุงุฑุงุช (2018-2025)',
        xaxis_title='ุงูุณูุฉ',
        yaxis_title='ูุคุดุฑ ุงูุทูุจ (100-0)',
        legend=dict(orientation="h", y=1.1),
        font=dict(family="Tajawal", size=14),
        hovermode="x unified"
    )

    st.plotly_chart(fig, use_container_width=True)

# ุงูุชุจููุจ ุงูุซุงูู: ุงูููุงุณ ุงูุงูุชุตุงุฏู
with tabs[1]:
    st.markdown("<h2>ูุณุงุฑ ุงูุชุฎุตุต ูู ุงูููุงุณ ุงูุงูุชุตุงุฏู (Econometrics)</h2>", unsafe_allow_html=True)

    st.markdown("""
    ุงูููุงุณ ุงูุงูุชุตุงุฏู ูู ูุฑุน ูู ุงูุงูุชุตุงุฏ ูุฑูุฒ ุนูู ุชุทุจูู ุงูุฃุณุงููุจ ุงูุฅุญุตุงุฆูุฉ ูุงูุฑูุงุถูุฉ ูุงุฎุชุจุงุฑ ุงููุธุฑูุงุช ุงูุงูุชุตุงุฏูุฉ ูููุงุณ ุงูุนูุงูุงุช ุจูู ุงููุชุบูุฑุงุช ุงูุงูุชุตุงุฏูุฉ.
    """)

    # ุชุนุฑูู ููููุงุช ุงูููุงุณ ุงูุงูุชุตุงุฏู
    components = {
        'ุงูููุงุฐุฌ ุงูุงูุชุตุงุฏูุฉ': 'ุจูุงุก ููุงุฐุฌ ูุธุฑูุฉ ุชูุซู ุงูุนูุงูุงุช ุงูุงูุชุตุงุฏูุฉ',
        'ุงููููุฌูุฉ ุงูุฅุญุตุงุฆูุฉ': 'ุชุทุจูู ุงูุฃุฏูุงุช ุงูุฅุญุตุงุฆูุฉ ูุชูุฏูุฑ ูุนุงูู ุงูููุงุฐุฌ',
        'ุชุญููู ุงูุจูุงูุงุช': 'ูุนุงูุฌุฉ ูุชุญููู ุงูุจูุงูุงุช ุงูุงูุชุตุงุฏูุฉ ุงููุฎุชููุฉ',
        'ุชูุณูุฑ ุงููุชุงุฆุฌ': 'ุดุฑุญ ุงููุชุงุฆุฌ ูุชูุฏูู ุชูุตูุงุช ููุณูุงุณุงุช ุงูุงูุชุตุงุฏูุฉ'
    }

    col1, col2 = st.columns([3, 2])

    with col1:
        st.markdown("<h3>ููููุงุช ุงูููุงุณ ุงูุงูุชุตุงุฏู</h3>", unsafe_allow_html=True)

        for component, desc in components.items():
            st.markdown(f"**{component}**: {desc}")

    with col2:
        # ูุฎุทุท ููููุงุฑุงุช ุงููุทููุจุฉ ูู ุงูููุงุณ ุงูุงูุชุตุงุฏู
        skills = ['ุงูุฅุญุตุงุก', 'ุงููุธุฑูุฉ ุงูุงูุชุตุงุฏูุฉ', 'ุงูุฑูุงุถูุงุช', 'ุงูุจุฑูุฌุฉ', 'ุชุญููู ุงูุจูุงูุงุช']
        importance = [95, 90, 85, 75, 80]

        fig = px.bar(
            x=importance,
            y=skills,
            orientation='h',
            title='ุฃูููุฉ ุงูููุงุฑุงุช ูู ุงูููุงุณ ุงูุงูุชุตุงุฏู',
            color=importance,
            color_continuous_scale='blues',
            text=importance
        )

        fig.update_layout(
            xaxis_title='ูุณุชูู ุงูุฃูููุฉ (100-0)',
            yaxis_title='ุงูููุงุฑุฉ',
            font=dict(family="Tajawal", size=14)
        )

        st.plotly_chart(fig, use_container_width=True)

    # ุงูููุงุถูุน ุงูุฃุณุงุณูุฉ ูู ุงูููุงุณ ุงูุงูุชุตุงุฏู
    st.markdown("<h3>ุงูููุงุถูุน ุงูุฃุณุงุณูุฉ ูู ุงูููุงุณ ุงูุงูุชุตุงุฏู</h3>", unsafe_allow_html=True)

    topics = [
        {
            'title': 'ุงูุงูุญุฏุงุฑ ุงูุฎุทู (Linear Regression)',
            'desc': 'ุฃุณุงุณ ุชุญููู ุงูุนูุงูุงุช ุจูู ุงููุชุบูุฑุงุชุ ูุดูู OLSุ GLSุ ูุงููุชุบูุฑุงุช ุงูุตูุฑูุฉ.',
            'depth': 'ุฃุณุงุณู'
        },
        {
            'title': 'ููุงุฐุฌ ุงูุณูุงุณู ุงูุฒูููุฉ (Time Series Models)',
            'desc': 'ุชุญููู ุงูุจูุงูุงุช ุนุจุฑ ุงูุฒููุ ูุดูู ARIMAุ GARCHุ ุงุฎุชุจุงุฑุงุช ุงูุณูููุ ูุงูุชูุงูู ุงููุดุชุฑู.',
            'depth': 'ูุชูุฏู'
        },
        {
            'title': 'ููุงุฐุฌ ุงูุจูุงูุงุช ุงูููุทุนูุฉ (Panel Data)',
            'desc': 'ุชุญููู ุงูุจูุงูุงุช ุนุจุฑ ุงููุญุฏุงุช ูุงูุฒููุ ูุดูู ุงูุขุซุงุฑ ุงูุซุงุจุชุฉ ูุงูุนุดูุงุฆูุฉ.',
            'depth': 'ูุชูุฏู'
        },
        {
            'title': 'ุงููุนุงุฏูุงุช ุงูุขููุฉ (Simultaneous Equations)',
            'desc': 'ููุฐุฌุฉ ุงูุนูุงูุงุช ุงููุชุจุงุฏูุฉ ุจูู ุงููุชุบูุฑุงุชุ ูุดูู 2SLSุ 3SLS.',
            'depth': 'ูุชูุฏู'
        },
        {
            'title': 'ุงูุงูุชุตุงุฏ ุงูููุงุณู ุบูุฑ ุงููุนููู (Nonparametric Econometrics)',
            'desc': 'ุฃุณุงููุจ ุชุญููู ุฏูู ุงูุชุฑุงุถุงุช ูููุฉ ุญูู ุชูุฒูุน ุงูุจูุงูุงุช.',
            'depth': 'ูุชุฎุตุต'
        },
        {
            'title': 'ุชูููู ุงูุฃุซุฑ (Impact Evaluation)',
            'desc': 'ููุงุณ ุชุฃุซูุฑ ุงูุณูุงุณุงุช ูุงูุจุฑุงูุฌ ุจุงุณุชุฎุฏุงู ููุงูุฌ ูุซู RCTุ DIDุ RDD.',
            'depth': 'ูุชูุฏู'
        }
    ]

    # ุนุฑุถ ุงูููุงุถูุน ูู ุฌุฏูู
    topics_df = pd.DataFrame(topics)

    colors = {
        'ุฃุณุงุณู': '#e6f3ff',
        'ูุชูุฏู': '#d0e8ff',
        'ูุชุฎุตุต': '#b8dcff'
    }

    # ุชุทุจูู ุชูุณูู ุงูุฃููุงู
    def highlight_depth(val):
        return f'background-color: {colors.get(val, "#ffffff")}'

    st.dataframe(
        topics_df.style.map(highlight_depth, subset=['depth']).set_properties(**{'text-align': 'right'}) # CORRECTED: applymap to map
    )

    # ูุณุงุฑ ุงูุชุนูู ุงูููุชุฑุญ
    st.markdown("<h3>ุงููุณุงุฑ ุงูููุชุฑุญ ููุชุฎุตุต ูู ุงูููุงุณ ุงูุงูุชุตุงุฏู</h3>", unsafe_allow_html=True)

    learning_path = [
        {
            'ุงููุฑุญูุฉ': 'ุงููุฑุญูุฉ ุงูุฃููู: ุงูุฃุณุงุณูุงุช',
            'ุงูููุงุฏ': 'ุงูุฅุญุตุงุกุ ุงูุงุญุชูุงูุงุชุ ุงูุฌุจุฑ ุงูุฎุทูุ ุงูุงูุชุตุงุฏ ุงูุฌุฒุฆู ูุงูููู',
            'ุงููุฏุฉ': '6-12 ุดูุฑ'
        },
        {
            'ุงููุฑุญูุฉ': 'ุงููุฑุญูุฉ ุงูุซุงููุฉ: ุฃุณุงุณูุงุช ุงูููุงุณ',
            'ุงูููุงุฏ': 'ููุงุฐุฌ ุงูุงูุญุฏุงุฑุ ุงูุงุฎุชุจุงุฑุงุช ุงูุฅุญุตุงุฆูุฉุ ุชูุณูุฑ ุงููุชุงุฆุฌ',
            'ุงููุฏุฉ': '3-6 ุฃุดูุฑ'
        },
        {
            'ุงููุฑุญูุฉ': 'ุงููุฑุญูุฉ ุงูุซุงูุซุฉ: ุชูููุงุช ูุชูุฏูุฉ',
            'ุงูููุงุฏ': 'ุงูุณูุงุณู ุงูุฒูููุฉุ ุงูุจูุงูุงุช ุงูููุทุนูุฉุ ุงููุนุงุฏูุงุช ุงูุขููุฉ',
            'ุงููุฏุฉ': '6-12 ุดูุฑ'
        },
        {
            'ุงููุฑุญูุฉ': 'ุงููุฑุญูุฉ ุงูุฑุงุจุนุฉ: ุงูุชุทุจููุงุช',
            'ุงูููุงุฏ': 'ุฏุฑุงุณุงุช ุญุงูุฉุ ูุดุงุฑูุน ุนูููุฉุ ุชุญูููุงุช ูุจูุงูุงุช ุญููููุฉ',
            'ุงููุฏุฉ': '6+ ุฃุดูุฑ'
        },
        {
            'ุงููุฑุญูุฉ': 'ุงููุฑุญูุฉ ุงูุฎุงูุณุฉ: ุงูุชุฎุตุต',
            'ุงูููุงุฏ': 'ุงูุชุนูู ูู ูุฌุงู ูุญุฏุฏ (ูุงููุ ุชููููุ ุจูุฆูุ ุฅูุฎ)',
            'ุงููุฏุฉ': 'ูุณุชูุฑ'
        }
    ]

    learning_path_df = pd.DataFrame(learning_path)
    st.table(learning_path_df.set_index('ุงููุฑุญูุฉ'))

    # ูุตุงุฆุญ ููุจุงุญุซูู ุงููุจุชุฏุฆูู
    st.markdown("<h3>ูุตุงุฆุญ ููุจุงุญุซูู ุงููุจุชุฏุฆูู ูู ุงูููุงุณ ุงูุงูุชุตุงุฏู</h3>", unsafe_allow_html=True)

    st.markdown("""
    1. **ุงุจุฏุฃ ุจุงูุฃุณุงุณูุงุช ุงููุธุฑูุฉ**: ุชุฃูุฏ ูู ูููู ุงูุนููู ููุฅุญุตุงุก ูุงูุงูุชุตุงุฏ ูุจู ุงูุฎูุถ ูู ุชูููุงุช ูุชูุฏูุฉ.

    2. **ุงุชูู ูุบุฉ ุจุฑูุฌุฉ ูุงุญุฏุฉ ุนูู ุงูุฃูู**: ููุถู R ุฃู Pythonุ ูุน ุงูุชุฑููุฒ ุนูู ุงูุญุฒู ุงููุชุฎุตุตุฉ.

    3. **ุงูุฑุฃ ุงูุฃูุฑุงู ุงูุจุญุซูุฉ**: ุงุทูุน ุจุงุณุชูุฑุงุฑ ุนูู ุงูุฃุจุญุงุซ ุงูุญุฏูุซุฉ ูู ูุฌุงู ุชุฎุตุตู.

    4. **ูุงุฑุณ ุงูุชุทุจูู ุงูุนููู**: ุญุงูู ุชูุฑุงุฑ ูุชุงุฆุฌ ุงูุฃุจุญุงุซ ุงูููุดูุฑุฉ ุจุงุณุชุฎุฏุงู ููุณ ุงูุจูุงูุงุช.

    5. **ุดุงุฑู ูู ุงููุฌุชูุนุงุช ุงูุนูููุฉ**: ุงูุถู ูููุคุชูุฑุงุช ูุงูููุชุฏูุงุช ุงูุฃูุงุฏูููุฉ ูุชูุณูุน ุดุจูุฉ ุนูุงูุงุชู.
    """)

    # ุงูุจุฑุงูุฌ ูุงูุฃุฏูุงุช ุงูุฃุณุงุณูุฉ
    st.markdown("<h3>ุงูุจุฑุงูุฌ ูุงูุฃุฏูุงุช ุงูุฃุณุงุณูุฉ ูู ุงูููุงุณ ุงูุงูุชุตุงุฏู</h3>", unsafe_allow_html=True)

    tools = {
        'STATA': ['ุจุฑูุงูุฌ ุดุงุฆุน ูู ุงูุจุญูุซ ุงูุงูุชุตุงุฏูุฉ', 90],
        'R': ['ููุชูุญ ุงููุตุฏุฑุ ูุญูู ุญุฒู ูุชุฎุตุตุฉ ููููุงุณ ุงูุงูุชุตุงุฏู', 85],
        'EViews': ['ูุชุฎุตุต ูู ุชุญููู ุงูุณูุงุณู ุงูุฒูููุฉ', 75],
        'Python': ['ูุชุนุฏุฏ ุงูุงุณุชุฎุฏุงูุงุช ูุน ููุชุจุงุช StatsModels, Scikit-learn', 80],
        'MATLAB': ['ููู ูู ุงูููุฐุฌุฉ ุงูุฑูุงุถูุฉ ูุงููุญุงูุงุฉ', 65],
        'SPSS': ['ูุณุชุฎุฏู ุฃุญูุงููุง ูู ุงูุชุญูููุงุช ุงูุจุณูุทุฉ', 50],
        'Julia': ['ูุบุฉ ุญุฏูุซุฉ ุณุฑูุนุฉ ุฎุงุตุฉ ุจุงูุญูุณุจุฉ ุงูุนูููุฉ', 40]
    }

    tools_df = pd.DataFrame({
        'ุงูุฃุฏุงุฉ': list(tools.keys()),
        'ุงููุตู': [v[0] for v in tools.values()],
        'ุงูุงูุชุดุงุฑ': [v[1] for v in tools.values()]
    })

    fig = px.bar(
        tools_df,
        x='ุงูุงูุชุดุงุฑ',
        y='ุงูุฃุฏุงุฉ',
        orientation='h',
        title='ูุฏู ุงูุชุดุงุฑ ุงูุฃุฏูุงุช ูู ูุฌุงู ุงูููุงุณ ุงูุงูุชุตุงุฏู',
        text='ุงูุงูุชุดุงุฑ',
        color='ุงูุงูุชุดุงุฑ',
        color_continuous_scale='blues'
    )

    fig.update_layout(
        font=dict(family="Tajawal", size=14),
        xaxis_title='ูุณุชูู ุงูุงูุชุดุงุฑ (100-0)'
    )

    st.plotly_chart(fig, use_container_width=True)

# ุงูุชุจููุจ ุงูุซุงูุซ: ุนูู ุงูุจูุงูุงุช
with tabs[2]:
    st.markdown("<h2>ูุณุงุฑ ุงูุชุทูุฑ ููุญูู ุจูุงูุงุช ูุนุงูู ุจูุงูุงุช</h2>", unsafe_allow_html=True)

    st.markdown("""
    ูุนุชุจุฑ ุนูู ุงูุจูุงูุงุช ูู ุงููุฌุงูุงุช ุณุฑูุนุฉ ุงูููู ุงูุชู ุชุฌูุน ุจูู ุงูุฅุญุตุงุก ูุนููู ุงูุญุงุณุจ ูุงูุฎุจุฑุฉ ุงููุฌุงููุฉ. ูุชุฎุตุต ูุญููู ุงูุจูุงูุงุช ูุนููุงุก ุงูุจูุงูุงุช ูู ุงุณุชุฎุฑุงุฌ ุงููุนุฑูุฉ ูุงูุฑุคู ุงููููุฉ ูู ุงูุจูุงูุงุช.
    """)

    # ุงููุฑู ุจูู ูุญูู ุงูุจูุงูุงุช ูุนุงูู ุงูุจูุงูุงุช
    st.markdown("<h3>ุงููุฑู ุจูู ูุญูู ุงูุจูุงูุงุช ูุนุงูู ุงูุจูุงูุงุช</h3>", unsafe_allow_html=True)

    col1, col2 = st.columns(2)

    with col1:
        st.markdown("<h4 style='text-align: center;'>ูุญูู ุงูุจูุงูุงุช</h4>", unsafe_allow_html=True)
        st.markdown("""
        - ูุฑูุฒ ุนูู ุชุญููู ุงูุจูุงูุงุช ูุงุณุชุฎุฑุงุฌ ุงูุฑุคู
        - ูุณุชุฎุฏู ุฃุฏูุงุช ุชุญููููุฉ ูุฅุญุตุงุฆูุฉ
        - ูุนูู ูุน ุจูุงูุงุช ููุธูุฉ ุบุงูุจูุง
        - ููุงุฑุงุช ุจุฑูุฌุฉ ูุชูุณุทุฉ
        - ูุฑูุฒ ุนูู ุชุญููู ูุชูุณูุฑ ุงูุจูุงูุงุช ุงูุญุงููุฉ
        - ุงูุฎูููุฉ ุบุงูุจูุง ูู ุงูุฅุญุตุงุก ุฃู ุฅุฏุงุฑุฉ ุงูุฃุนูุงู
        """)

    with col2:
        st.markdown("<h4 style='text-align: center;'>ุนุงูู ุงูุจูุงูุงุช</h4>", unsafe_allow_html=True)
        st.markdown("""
        - ูุจูู ููุงุฐุฌ ุชูุจุคูุฉ ูุฎูุงุฑุฒููุงุช ูุชูุฏูุฉ
        - ูุนูู ูู ุงูุชุนูู ุงูุขูู ูุงูุฐูุงุก ุงูุงุตุทูุงุนู
        - ูุชุนุงูู ูุน ุจูุงูุงุช ููุธูุฉ ูุบูุฑ ููุธูุฉ
        - ููุงุฑุงุช ุจุฑูุฌุฉ ูุชูุฏูุฉ
        - ูุจูู ุฃูุธูุฉ ุชุชูุจุฃ ุจุงููุณุชูุจู
        - ุงูุฎูููุฉ ุบุงูุจูุง ูู ุนููู ุงูุญุงุณุจ ุฃู ุงูุฑูุงุถูุงุช
        """)

    # ูุฎุทุท ููู ูุชูุถูุญ ุงูุชุฏุงุฎู
    st.markdown("<h3>ุงูุนูุงูุฉ ุจูู ุงููุฌุงูุงุช</h3>", unsafe_allow_html=True)

    # ุฅูุดุงุก ุจูุงูุงุช ููุฎุทุท scatter ูุชูุซูู ูุฎุทุท ููู
    n = 1000
    circles = pd.DataFrame({
        'x': np.concatenate([
            np.random.normal(-1, 0.5, n),  # ุฏุงุฆุฑุฉ ูุญูู ุงูุจูุงูุงุช
            np.random.normal(1, 0.5, n),  # ุฏุงุฆุฑุฉ ุนุงูู ุงูุจูุงูุงุช
            np.random.normal(0, 0.3, n)  # ุงูุชุฏุงุฎู
        ]),
        'y': np.concatenate([
            np.random.normal(0, 0.5, n),
            np.random.normal(0, 0.5, n),
            np.random.normal(0, 0.5, n)
        ]),
        'group': np.concatenate([
            ['ูุญูู ุจูุงูุงุช'] * n,
            ['ุนุงูู ุจูุงูุงุช'] * n,
            ['ูุดุชุฑู'] * n
        ])
    })

    fig = px.scatter(
        circles,
        x='x',
        y='y',
        color='group',
        opacity=0.6,
        color_discrete_map={
            'ูุญูู ุจูุงูุงุช': '#4361ee',
            'ุนุงูู ุจูุงูุงุช': '#7209b7',
            'ูุดุชุฑู': '#4cc9f0'
        },
        title='ุงูุนูุงูุฉ ุจูู ูุญูู ุงูุจูุงูุงุช ูุนุงูู ุงูุจูุงูุงุช'
    )

    fig.update_layout(
        showlegend=True,
        font=dict(family="Tajawal", size=14),
        xaxis=dict(showticklabels=False),
        yaxis=dict(showticklabels=False)
    )

    # ุฅุถุงูุฉ ูุตูุต ุนูู ุงููุฎุทุท
    fig.add_annotation(
        x=-1.5, y=0,
        text="ุชุญููู ุงูุจูุงูุงุช<br>ุงูุฅุญุตุงุก ุงูุชูููุฏู<br>ุชุตูุฑ ุงูุจูุงูุงุช",
        showarrow=False,
        font=dict(family="Tajawal", size=14)
    )

    fig.add_annotation(
        x=1.5, y=0,
        text="ุชุนูู ุขูู ูุชูุฏู<br>ูุนุงูุฌุฉ ูุบุฉ ุทุจูุนูุฉ<br>ุฑุคูุฉ ุญุงุณูุจูุฉ",
        showarrow=False,
        font=dict(family="Tajawal", size=14)
    )

    fig.add_annotation(
        x=0, y=0,
        text="Python/R<br>ุฅุญุตุงุก<br>SQL",
        showarrow=False,
        font=dict(family="Tajawal", size=14, color="white")
    )

    st.plotly_chart(fig, use_container_width=True)

    # ุงูููุงุฑุงุช ุงููุทููุจุฉ ูุนุงูู ุงูุจูุงูุงุช
    st.markdown("<h3>ุงูููุงุฑุงุช ุงูุฃุณุงุณูุฉ ูุนุงูู ุงูุจูุงูุงุช</h3>", unsafe_allow_html=True)

    skills = {
        'ุงูุจุฑูุฌุฉ': [
            'Python (ุงููุธุงู ุงูุจูุฆู: NumPy, Pandas, Scikit-learn)',
            'R (ggplot2, dplyr, caret)',
            'SQL ููุชุนุงูู ูุน ููุงุนุฏ ุงูุจูุงูุงุช',
            'Scala/Java (ุฎุงุตุฉ ูุน Apache Spark)'
        ],
        'ุงูุฅุญุตุงุก ูุงูุฑูุงุถูุงุช': [
            'ุงูุฅุญุตุงุก ุงูุงุณุชุฏูุงูู ูุงููุตูู',
            'ูุธุฑูุฉ ุงูุงุญุชูุงูุงุช',
            'ุงูุฌุจุฑ ุงูุฎุทู',
            'ุญุณุงุจ ุงูุชูุงุถู ูุงูุชูุงูู',
            'ุงูุชุญุณูู (Optimization)'
        ],
        'ุงูุชุนูู ุงูุขูู': [
            'ุชุนูู ุฎุงุถุน ููุฅุดุฑุงู ูุบูุฑ ุฎุงุถุน ููุฅุดุฑุงู',
            'ุดุจูุงุช ุนุตุจูุฉ ูููุงุฐุฌ ุนูููุฉ',
            'ูุนุงูุฌุฉ ุงููุบุฉ ุงูุทุจูุนูุฉ',
            'ุงูุฑุคูุฉ ุงูุญุงุณูุจูุฉ',
            'ุถุจุท ุงูููุงุฐุฌ ูุชูููููุง'
        ],
        'ูุนุงูุฌุฉ ุงูุจูุงูุงุช': [
            'ุชูุธูู ุงูุจูุงูุงุช ูุฅุนุฏุงุฏูุง',
            'ููุฏุณุฉ ุงูุฎุตุงุฆุต (Feature Engineering)',
            'ุงูุชุนุงูู ูุน ุงูุจูุงูุงุช ุบูุฑ ุงููุชูุงุฒูุฉ ูุงูููู ุงูููููุฏุฉ',
            'ุชูููู ุงูุฃุจุนุงุฏ',
            'ุงูุชุนุงูู ูุน ุงูุจูุงูุงุช ุงููุจูุฑุฉ'
        ],
        'ุชุตูุฑ ุงูุจูุงูุงุช': [
            'Matplotlib, Seaborn, Plotly ูู Python',
            'ggplot2 ูู R',
            'Tableau, Power BI',
            'D3.js ููุชุตูุฑุงุช ุงูุชูุงุนููุฉ'
        ],
        'ุจูุฆุฉ ุงูุนูู': [
            'ุฃูุธูุฉ ุงูุชุญูู ุจุงูุฅุตุฏุงุฑุงุช (Git)',
            'Docker ูุงูุญุงููุงุช',
            'Cloud Computing (AWS, Azure, GCP)',
            'ุชุทููุฑ ูุชุดุบูู ุงูููุงุฐุฌ (MLOps)'
        ]
    }

    col1, col2 = st.columns(2)

    for i, (category, items) in enumerate(skills.items()):
        with col1 if i % 2 == 0 else col2:
            st.markdown(f"<h4>{category}</h4>", unsafe_allow_html=True)
            for item in items:
                st.markdown(f"- {item}")

    # ูุฑุงุญู ูุดุฑูุน ุนูู ุงูุจูุงูุงุช ุงููููุฐุฌู
    st.markdown("<h3>ูุฑุงุญู ูุดุฑูุน ุนูู ุงูุจูุงูุงุช ุงููููุฐุฌู</h3>", unsafe_allow_html=True)

    stages = [
        "ููู ุงููุดููุฉ",
        "ุฌูุน ุงูุจูุงูุงุช",
        "ุงุณุชูุดุงู ุงูุจูุงูุงุช ูุชุญููููุง",
        "ุชูุธูู ุงูุจูุงูุงุช ูุฅุนุฏุงุฏูุง",
        "ููุฏุณุฉ ุงูุฎุตุงุฆุต",
        "ุจูุงุก ุงููููุฐุฌ",
        "ุชูููู ุงููููุฐุฌ",
        "ุถุจุท ุงููููุฐุฌ",
        "ูุดุฑ ุงููููุฐุฌ",
        "ุงููุฑุงูุจุฉ ูุงูุตูุงูุฉ"
    ]

    stages_desc = [
        "ุชุญุฏูุฏ ุฃูุฏุงู ุงููุดุฑูุน ูุงููุดููุฉ ุงููุฑุงุฏ ุญููุง",
        "ุชุญุฏูุฏ ูุตุงุฏุฑ ุงูุจูุงูุงุช ูุฌูุนูุง ูู ูุฎุชูู ุงููุตุงุฏุฑ",
        "ููู ุงูุจูุงูุงุช ูุชุญููู ุงูุฎุตุงุฆุต ูุงูุนูุงูุงุช",
        "ูุนุงูุฌุฉ ุงูููู ุงูููููุฏุฉ ูุงูุดุงุฐุฉ ูุชูุญูุฏ ุงูุจูุงูุงุช",
        "ุชุญููู ุงูุจูุงูุงุช ุงูุฎุงู ุฅูู ุฎุตุงุฆุต ูููุฏุฉ",
        "ุงุฎุชูุงุฑ ุฎูุงุฑุฒููุงุช ููุงุณุจุฉ ูุชุฏุฑูุจ ุงูููุงุฐุฌ",
        "ููุงุณ ุฃุฏุงุก ุงููููุฐุฌ ุจุงุณุชุฎุฏุงู ููุงููุณ ูุฎุชููุฉ",
        "ุชุญุณูู ุงูุฎุตุงุฆุต ููุนููุงุช ุงููููุฐุฌ",
        "ุชุดุบูู ุงููููุฐุฌ ูู ุจูุฆุฉ ุงูุฅูุชุงุฌ",
        "ูุชุงุจุนุฉ ุฃุฏุงุก ุงููููุฐุฌ ูุชุญุฏูุซู ุญุณุจ ุงูุญุงุฌุฉ"
    ]

    # ุฅูุดุงุก ูุฎุทุท ููุฑุงุญู ุงููุดุฑูุน
    stages_df = pd.DataFrame({
        'ุงููุฑุญูุฉ': stages,
        'ุงููุตู': stages_desc,
        'ุงููุฑุญูุฉ_ุฑูู': list(range(1, len(stages) + 1))
    })

    fig = go.Figure()

    fig.add_trace(go.Scatter(
        x=stages_df['ุงููุฑุญูุฉ_ุฑูู'],
        y=[1] * len(stages_df),
        mode='markers+text',
        marker=dict(
            size=30,
            color=['#4361ee', '#4361ee', '#3a0ca3', '#3a0ca3',
                   '#7209b7', '#7209b7', '#f72585', '#f72585',
                   '#4cc9f0', '#4cc9f0'],
            symbol='circle',
            line=dict(width=2, color='white')
        ),
        text=stages_df['ุงููุฑุญูุฉ_ุฑูู'],
        textfont=dict(color='white', size=14, family='Tajawal'),
        name=''
    ))

    # ุฅุถุงูุฉ ุงูุชุณููุงุช ูููุฑุงุญู
    for i, (stage, desc) in enumerate(zip(stages, stages_desc)):
        fig.add_annotation(
            x=i + 1,
            y=1.2 if i % 2 == 0 else 0.8,
            text=f"<b>{stage}</b><br>{desc}",
            showarrow=False,
            font=dict(size=12, family='Tajawal'),
            align='center',
            bgcolor='rgba(255, 255, 255, 0.8)',
            bordercolor='gray',
            borderwidth=1,
            borderpad=4,
            xanchor='center'
        )

    # ุฅุถุงูุฉ ุงูุณูู ุงูุฐู ูุฑุจุท ุงููุฑุงุญู
    fig.add_shape(
        type='line',
        x0=0.5, y0=1,
        x1=len(stages) + 0.5, y1=1,
        line=dict(color='gray', width=2)
    )

    fig.update_layout(
        title='ุฏูุฑุฉ ุญูุงุฉ ูุดุฑูุน ุนูู ุงูุจูุงูุงุช',
        showlegend=False,
        height=500,
        xaxis=dict(
            showticklabels=False,
            range=[0, len(stages) + 1]
        ),
        yaxis=dict(
            showticklabels=False,
            range=[0.5, 1.5]
        ),
        plot_bgcolor='white',
        font=dict(family='Tajawal')
    )

    st.plotly_chart(fig, use_container_width=True)

    # ุงููุณุงุฑ ุงููุธููู ุงููุชุฏุฑุฌ
    st.markdown("<h3>ุงููุณุงุฑ ุงููุธููู ุงููุชุฏุฑุฌ ูู ูุฌุงู ุงูุจูุงูุงุช</h3>", unsafe_allow_html=True)

    career_path = [
        {
            'ุงูููุตุจ': 'ูุญูู ุจูุงูุงุช ูุจุชุฏุฆ (Junior Data Analyst)',
            'ุงููุตู': 'ูุฑูุฒ ุนูู ุชูุธูู ุงูุจูุงูุงุช ูุฅุนุฏุงุฏ ุงูุชูุงุฑูุฑ ุงูุฃุณุงุณูุฉ ูุชุตูุฑ ุงูุจูุงูุงุช.',
            'ุงูููุงุฑุงุช': 'SQL, Excel, ุฃุฏูุงุช ุชุตูุฑ ุงูุจูุงูุงุชุ ุฅุญุตุงุก ุฃุณุงุณู',
            'ุณููุงุช ุงูุฎุจุฑุฉ': '0-2'
        },
        {
            'ุงูููุตุจ': 'ูุญูู ุจูุงูุงุช (Data Analyst)',
            'ุงููุตู': 'ูููู ุจุชุญูููุงุช ุฃูุซุฑ ุชุนููุฏูุงุ ุงุณุชุฎุฑุงุฌ ุฑุคู ูุชูุฏูุฉุ ูุชุทููุฑ ููุญุงุช ูุนูููุงุช.',
            'ุงูููุงุฑุงุช': 'SQL ูุชูุฏูุ Python/Rุ ุฅุญุตุงุก ูุชูุณุทุ ุชุนูู ุขูู ุฃุณุงุณู',
            'ุณููุงุช ุงูุฎุจุฑุฉ': '2-4'
        },
        {
            'ุงูููุตุจ': 'ูุญูู ุจูุงูุงุช ุฃูู (Senior Data Analyst)',
            'ุงููุตู': 'ูููุฏ ูุดุงุฑูุน ุชุญููููุฉุ ูุฏุฑุจ ุงููุญูููู ุงูุฌุฏุฏุ ููุถุน ุงุณุชุฑุงุชูุฌูุงุช ุชุญููููุฉ.',
            'ุงูููุงุฑุงุช': 'ุจุฑูุฌุฉ ูุชูุฏูุฉุ ุชุญูููุงุช ุชูุจุคูุฉุ ููุงุฑุงุช ููุงุฏูุฉ',
            'ุณููุงุช ุงูุฎุจุฑุฉ': '4-6'
        },
        {
            'ุงูููุตุจ': 'ุนุงูู ุจูุงูุงุช ูุจุชุฏุฆ (Junior Data Scientist)',
            'ุงููุตู': 'ูุจูู ููุงุฐุฌ ุฅุญุตุงุฆูุฉ ูุชุนูู ุขูู ุจุณูุทุฉ ุชุญุช ุฅุดุฑุงู.',
            'ุงูููุงุฑุงุช': 'ุชุนูู ุขููุ ุฅุญุตุงุก ูุชูุฏูุ ุจุฑูุฌุฉ ุฌูุฏุฉุ ูุนุฑูุฉ ุจุงูุจูุงูุงุช ุงููุจูุฑุฉ',
            'ุณููุงุช ุงูุฎุจุฑุฉ': '1-3'
        },
        {
            'ุงูููุตุจ': 'ุนุงูู ุจูุงูุงุช (Data Scientist)',
            'ุงููุตู': 'ูุทูุฑ ููุงุฐุฌ ูุชูุฏูุฉุ ูุนูู ูุน ุจูุงูุงุช ูุนูุฏุฉุ ูุชุฑุฌู ุงููุดุงูู ุงูุนูููุฉ ุฅูู ุญููู ุจูุงูุงุช.',
            'ุงูููุงุฑุงุช': 'ุชุนูู ุขูู ูุชูุฏูุ ุชุนูู ุนูููุ ุชุทููุฑ ููุงุฐุฌ ูุงุจูุฉ ููุชุดุบูู',
            'ุณููุงุช ุงูุฎุจุฑุฉ': '3-5'
        },
        {
            'ุงูููุตุจ': 'ุนุงูู ุจูุงูุงุช ุฃูู (Senior Data Scientist)',
            'ุงููุตู': 'ูููุฏ ูุฑู ุนูู ุงูุจูุงูุงุชุ ูุถุน ุงุณุชุฑุงุชูุฌูุงุชุ ูุนูู ุนูู ูุดุงูู ุจุญุซูุฉ ูุชูุฏูุฉ.',
            'ุงูููุงุฑุงุช': 'ุชูููุงุช ุจุญุซูุฉ ูุชูุฏูุฉุ ุฅุฏุงุฑุฉ ุงููุฑูุ ุฎุจุฑุฉ ูู ุงููุฌุงู',
            'ุณููุงุช ุงูุฎุจุฑุฉ': '5+'
        },
        {
            'ุงูููุตุจ': 'ุฑุฆูุณ ุนููุงุก ุงูุจูุงูุงุช (Chief Data Scientist)',
            'ุงููุตู': 'ูุถุน ุฑุคูุฉ ุงูุดุฑูุฉ ูุงุณุชุฎุฏุงู ุงูุจูุงูุงุชุ ูุฑุจุท ุจูู ุงูุฃุนูุงู ูุงูุชุญูููุงุช.',
            'ุงูููุงุฑุงุช': 'ููู ุนููู ููุฃุนูุงูุ ููุงุฏุฉ ุงุณุชุฑุงุชูุฌูุฉุ ุงุชุฎุงุฐ ูุฑุงุฑุงุช',
            'ุณููุงุช ุงูุฎุจุฑุฉ': '8+'
        }
    ]

    career_df = pd.DataFrame(career_path)

    # CORRECTED: Commented out the px.timeline call as it caused an error and a table is already used.
    # fig = px.timeline(
    #     career_df,
    #     x_start='ุณููุงุช ุงูุฎุจุฑุฉ',
    #     x_end='ุณููุงุช ุงูุฎุจุฑุฉ',
    #     y='ุงูููุตุจ',
    #     color='ุงูููุตุจ',
    #     hover_name='ุงูููุตุจ',
    #     hover_data=['ุงููุตู', 'ุงูููุงุฑุงุช']
    # )

    # ูุง ูููู ุงุณุชุฎุฏุงู timeline ูุน plotly express ูู ูุฐู ุงูุญุงูุฉุ ูุฐุง ูุณุชุฎุฏู ุฌุฏูู
    st.table(career_df[['ุงูููุตุจ', 'ุงููุตู', 'ุงูููุงุฑุงุช', 'ุณููุงุช ุงูุฎุจุฑุฉ']])

    # ูุตุงุฆุญ ูููุจุชุฏุฆูู
    st.markdown("<h3>ูุตุงุฆุญ ูููุจุชุฏุฆูู ูู ูุฌุงู ุนูู ุงูุจูุงูุงุช</h3>", unsafe_allow_html=True)

    col1, col2 = st.columns(2)

    with col1:
        st.markdown("""
        1. **ุงุชูู ุงูุฃุณุงุณูุงุช ูุจู ุงูุชูููุงุช ุงููุชูุฏูุฉ**:
           - ุชุนูู ุงูุฅุญุตุงุก ูุงูุงุญุชูุงูุงุช ุจุดูู ูุชูู
           - ุงุชูู Python ุฃู R ูููุณ ูุฌุฑุฏ ุงูููุชุจุงุช
           - ุงููู ูููููุฉ ุงูุจูุงูุงุช ูุชูุธูููุง

        2. **ุงุจู ูุญูุธุฉ ูุดุงุฑูุน ุดุฎุตูุฉ**:
           - ุงุนูู ุนูู ูุดุงุฑูุน ุญููููุฉ ุญุชู ูู ูุงูุช ุตุบูุฑุฉ
           - ุดุงุฑู ุงูููุฏ ุนูู GitHub
           - ูุซู ุนููู ููููุฌูุชู

        3. **ุงุณุชูุฏ ูู ุงูููุงูุณุงุช ูุงููุฌุชูุนุงุช**:
           - ุดุงุฑู ูู ููุงูุณุงุช Kaggle
           - ุงูุถู ููุฌุชูุนุงุช ูุซู Stack Overflowุ Reddit (r/datascience)
           - ุงุญุถุฑ ูุคุชูุฑุงุช ูููุงุกุงุช ุงููุฌุงู
        """)

    with col2:
        st.markdown("""
        4. **ุชุนูู ุจุงุณุชูุฑุงุฑ**:
           - ุชุงุจุน ุขุฎุฑ ุงูุฃุจุญุงุซ ูุงูุชูููุงุช
           - ุฎุฐ ุฏูุฑุงุช ูู ุงููุฌุงูุงุช ุงูุชู ุชุญุชุงุฌ ูุชุทููุฑ
           - ุงูุฑุฃ ูุชุจ ูููุงูุงุช ูุชุฎุตุตุฉ

        5. **ุงูุชูู ูู ุชุญููู ุงูุจูุงูุงุช ุฅูู ุนูู ุงูุจูุงูุงุช ุชุฏุฑูุฌููุง**:
           - ุงุจุฏุฃ ุจููุงู ุชุญููู ุงูุจูุงูุงุช ุงูุจุณูุทุฉ
           - ุฃุถู ุชุฏุฑูุฌููุง ููุงุฑุงุช ุงูุชุนูู ุงูุขูู
           - ุชุนูู ุฃุณุงููุจ ุงูููุฐุฌุฉ ูุงูุชูููู

        6. **ุทูุฑ ููุงุฑุงุช ุงูุชูุงุตู**:
           - ุชุนูู ููููุฉ ุดุฑุญ ุงูุชุญูููุงุช ูุบูุฑ ุงููุชุฎุตุตูู
           - ุงุชูู ุชุตูุฑ ุงูุจูุงูุงุช ุงููุนุงู
           - ุนุฒุฒ ููุงุฑุงุช ุงูุนุฑุถ ูุงูุฅููุงุน
        """)

# ุงูุชุจููุจ ุงูุฑุงุจุน: ุงููุณุงุฑุงุช ุงูุชุนููููุฉ
with tabs[3]:
    st.markdown("<h2>ุงููุณุงุฑุงุช ุงูุชุนููููุฉ ุงููุชุงุญุฉ</h2>", unsafe_allow_html=True)

    # ุงููุณุงุฑุงุช ุงูุฃูุงุฏูููุฉ
    st.markdown("<h3>ุงููุณุงุฑุงุช ุงูุฃูุงุฏูููุฉ</h3>", unsafe_allow_html=True)

    academic_paths = [
        {
            'ุงููุณุงุฑ': 'ุฏุฑุฌุฉ ุงููุงุฌุณุชูุฑ ูู ุงูููุงุณ ุงูุงูุชุตุงุฏู',
            'ุงููุตู': 'ุจุฑูุงูุฌ ูุชุฎุตุต ูุฑูุฒ ุนูู ุงููุธุฑูุฉ ูุงูุชุทุจูู ูู ุงูููุงุณ ุงูุงูุชุตุงุฏูุ ููุงุณุจ ููู ูุฑุบุจ ูู ูุณุงุฑ ุฃูุงุฏููู ุฃู ุจุญุซู.',
            'ุงููุฏุฉ': '1-2 ุณููุงุช',
            'ุงููููุฒุงุช': 'ุชุนูู ูุธุฑูุ ุชูุฌูู ูู ุฃูุงุฏูููููุ ูุฑุต ุจุญุซูุฉุ ุดุจูุฉ ุนูุงูุงุช ุฃูุงุฏูููุฉ',
            'ุงูููุน': 'ุฃูุงุฏููู'
        },
        {
            'ุงููุณุงุฑ': 'ุฏุฑุฌุฉ ุงูุฏูุชูุฑุงู ูู ุงูุงูุชุตุงุฏ (ุชุฎุตุต ููุงุณ ุงูุชุตุงุฏู)',
            'ุงููุตู': 'ูุณุงุฑ ูุชูุฏู ููุบุงูุฉ ููุจุงุญุซูู ุงูุฐูู ูุฑุบุจูู ูู ุงูุชุฎุตุต ุงูุนููู ูุงููุณุงููุฉ ูู ุชุทููุฑ ุงููุฌุงู.',
            'ุงููุฏุฉ': '4-6 ุณููุงุช',
            'ุงููููุฒุงุช': 'ุจุญุซ ุฃุตููุ ูุฑุต ุฃูุงุฏูููุฉุ ููุงูุฉ ุนูููุฉุ ูุคูู ููุชุฏุฑูุณ ุงูุฌุงูุนู',
            'ุงูููุน': 'ุฃูุงุฏููู'
        },
        {
            'ุงููุณุงุฑ': 'ูุงุฌุณุชูุฑ ูู ุนูู ุงูุจูุงูุงุช',
            'ุงููุตู': 'ูุฌูุน ุจูู ุงูุฑูุงุถูุงุช ูุงูุฅุญุตุงุก ูุนููู ุงูุญุงุณุจ ูุน ุงูุชุฑููุฒ ุนูู ุชุญููู ุงูุจูุงูุงุช ูุงูุชุนูู ุงูุขูู.',
            'ุงููุฏุฉ': '1-2 ุณููุงุช',
            'ุงููููุฒุงุช': 'ุฃุณุงุณ ูุชูุงููุ ูุดุงุฑูุน ุนูููุฉุ ุดุจูุฉ ุฎุฑูุฌูู ูููุฉุ ุชูุงุฒู ุจูู ุงููุธุฑูุฉ ูุงูุชุทุจูู',
            'ุงูููุน': 'ุฃูุงุฏููู'
        },
        {
            'ุงููุณุงุฑ': 'ูุงุฌุณุชูุฑ ูู ุงูุฅุญุตุงุก ุงูุชุทุจููู',
            'ุงููุตู': 'ูุฑูุฒ ุนูู ุชุทุจูู ุงูุฃุณุงููุจ ุงูุฅุญุตุงุฆูุฉ ูู ูุฌุงูุงุช ูุฎุชููุฉ ุจูุง ูููุง ุงูุงูุชุตุงุฏ.',
            'ุงููุฏุฉ': '1-2 ุณููุงุช',
            'ุงููููุฒุงุช': 'ุฃุณุงุณ ุฅุญุตุงุฆู ูููุ ููุงุฑุงุช ุชุญููููุฉ ูุชูุฏูุฉุ ุชุทุจููุงุช ูุชููุนุฉ',
            'ุงูููุน': 'ุฃูุงุฏููู'
        }
    ]

    # ุงููุณุงุฑุงุช ุงูููููุฉ ูุงูุชุฏุฑูุจูุฉ
    professional_paths = [
        {
            'ุงููุณุงุฑ': 'ุดูุงุฏุฉ ูุญุชุฑู ุนูู ุงูุจูุงูุงุช',
            'ุงููุตู': 'ุจุฑุงูุฌ ููุซูุฉ ุชูุฏููุง ููุตุงุช ูุชุฎุตุตุฉ ูุซู Coursera ูEdX ูุงูุฌุงูุนุงุช ุงููุฑูููุฉ.',
            'ุงููุฏุฉ': '3-12 ุดูุฑ',
            'ุงููููุฒุงุช': 'ูุฑููุฉ ูู ุงูุชุนููุ ุชุฑููุฒ ุนูู ุงูููุงุฑุงุช ุงูุนูููุฉุ ุชูููุฉ ุฃูู ูู ุงูุฏุฑุฌุงุช ุงูุฃูุงุฏูููุฉ',
            'ุงูููุน': 'ูููู'
        },
        {
            'ุงููุณุงุฑ': 'ูุนุณูุฑุงุช ุชุฏุฑูุจูุฉ ููุซูุฉ (Bootcamps)',
            'ุงููุตู': 'ุจุฑุงูุฌ ููุซูุฉ ุจุฏูุงู ูุงูู ุชุฑูุฒ ุนูู ุงูููุงุฑุงุช ุงูุนูููุฉ ูุงููุดุงุฑูุน.',
            'ุงููุฏุฉ': '3-6 ุฃุดูุฑ',
            'ุงููููุฒุงุช': 'ุณุฑูุนุ ุนููู ุฌุฏูุงุ ุชูุงุตู ูุจุงุดุฑุ ุฏุนู ูู ุงูุชูุธูู',
            'ุงูููุน': 'ูููู'
        },
        {
            'ุงููุณุงุฑ': 'ุฏูุฑุงุช ูุชุฎุตุตุฉ ูู ุงูููุงุณ ุงูุงูุชุตุงุฏู',
            'ุงููุตู': 'ุฏูุฑุงุช ูุชุฎุตุตุฉ ุชูุฏููุง ูุคุณุณุงุช ูุซู ุงูุจูู ุงูุฏููู ูุตูุฏูู ุงูููุฏ ุงูุฏููู.',
            'ุงููุฏุฉ': '1-4 ุฃุดูุฑ',
            'ุงููููุฒุงุช': 'ูุญุชูู ุนุงูู ุงูุฌูุฏุฉุ ุงุนุชุฑุงู ุฏูููุ ุดุจูุฉ ููููุฉ ูููุฉ',
            'ุงูููุน': 'ูููู'
        },
        {
            'ุงููุณุงุฑ': 'ุงูุชุนูู ุงูุฐุงุชู ุงูููุธู',
            'ุงููุตู': 'ูุณุงุฑ ูุฎุตุต ูุนุชูุฏ ุนูู ุงูุฏูุฑุงุช ุงูููุชูุญุฉ ูุงููุชุจ ูุงููุดุงุฑูุน ุงูุดุฎุตูุฉ.',
            'ุงููุฏุฉ': 'ูุชุบูุฑุฉ (1-2 ุณูุฉ)',
            'ุงููููุฒุงุช': 'ูุฑููุฉ ูุงููุฉุ ุชูููุฉ ููุฎูุถุฉุ ุชุฎุตูุต ุญุณุจ ุงูุงุญุชูุงุฌุงุช',
            'ุงูููุน': 'ุฐุงุชู'
        }
    ]

    all_paths = academic_paths + professional_paths
    paths_df = pd.DataFrame(all_paths)

    # ุชุตููุฉ ุญุณุจ ููุน ุงููุณุงุฑ
    path_type = st.radio("ุงุฎุชุฑ ููุน ุงููุณุงุฑ:", ["ุงููู", "ุฃูุงุฏููู", "ูููู", "ุฐุงุชู"], horizontal=True)

    if path_type != "ุงููู":
        filtered_paths = paths_df[paths_df['ุงูููุน'] == path_type]
    else:
        filtered_paths = paths_df

    # ุนุฑุถ ุงููุณุงุฑุงุช ูู ุฌุฏูู
    st.table(filtered_paths[['ุงููุณุงุฑ', 'ุงููุตู', 'ุงููุฏุฉ', 'ุงููููุฒุงุช']])

    # ุงูููุตุงุช ุงูุชุนููููุฉ ุงูุฑุฆูุณูุฉ
    st.markdown("<h3>ููุตุงุช ุงูุชุนูู ุงูุฑุฆูุณูุฉ</h3>", unsafe_allow_html=True)

    platforms = [
        {
            'ุงูููุตุฉ': 'Coursera',
            'ุงูุชุฎุตุต': 'ุฏูุฑุงุช ูุนุชูุฏุฉ ูู ุฌุงูุนุงุช ุนุงูููุฉ ูู ุงูุงูุชุตุงุฏ ูุงูููุงุณ ูุนูู ุงูุจูุงูุงุช',
            'ุงูุชูููุฉ': 'ูุฌุงููุฉ ูููุดุงูุฏุฉุ ูุฏููุนุฉ ููุดูุงุฏุงุช (~$50-$100 ุดูุฑููุง)',
            'ุงููุบุฉ': 'ุงูุฅูุฌููุฒูุฉ ุจุดูู ุฃุณุงุณูุ ุจุนุถ ุงูุฏูุฑุงุช ูุชุฑุฌูุฉ'
        },
        {
            'ุงูููุตุฉ': 'edX',
            'ุงูุชุฎุตุต': 'ููุฑุฑุงุช ุฃูุงุฏูููุฉ ูุนููุฉ ูู ุฌุงูุนุงุช ูุซู MIT ูHarvard ูู ุงูุฅุญุตุงุก ูุงูุงูุชุตุงุฏ',
            'ุงูุชูููุฉ': 'ูุฌุงููุฉ ูููุดุงูุฏุฉุ ูุฏููุนุฉ ููุดูุงุฏุงุช (~$50-$300 ููุฏูุฑุฉ)',
            'ุงููุบุฉ': 'ุงูุฅูุฌููุฒูุฉ ุจุดูู ุฃุณุงุณู'
        },
        {
            'ุงูููุตุฉ': 'DataCamp',
            'ุงูุชุฎุตุต': 'ุฏูุฑุงุช ุชูุงุนููุฉ ูู ุงูุจุฑูุฌุฉ ูุชุญููู ุงูุจูุงูุงุช ูุงูุชุนูู ุงูุขูู',
            'ุงูุชูููุฉ': 'ุงุดุชุฑุงู ุดูุฑู (~$25-$33)',
            'ุงููุบุฉ': 'ุงูุฅูุฌููุฒูุฉ'
        },
        {
            'ุงูููุตุฉ': 'Udemy',
            'ุงูุชุฎุตุต': 'ุฏูุฑุงุช ุนูููุฉ ูุชููุนุฉ ูู ุงูุฅุญุตุงุก ูุงูุจุฑูุฌุฉ ูุชุญููู ุงูุจูุงูุงุช',
            'ุงูุชูููุฉ': '$10-$20 ููุฏูุฑุฉ (ุนูุฏ ุงูุชุฎููุถุงุช)',
            'ุงููุบุฉ': 'ูุชุนุฏุฏุฉ ุงููุบุงุช ุจูุง ูููุง ุงูุนุฑุจูุฉ'
        },
        {
            'ุงูููุตุฉ': 'LinkedIn Learning',
            'ุงูุชุฎุตุต': 'ุฏูุฑุงุช ููููุฉ ูุตูุฑุฉ ูู ููุงุฑุงุช ุงูุจูุงูุงุช ูุงูุชุญููู',
            'ุงูุชูููุฉ': 'ุงุดุชุฑุงู ุดูุฑู (~$30)',
            'ุงููุบุฉ': 'ุงูุฅูุฌููุฒูุฉ ุจุดูู ุฃุณุงุณู'
        },
        {
            'ุงูููุตุฉ': 'ุฅุฏุฑุงู',
            'ุงูุชุฎุตุต': 'ููุตุฉ ุนุฑุจูุฉ ุชูุฏู ุฏูุฑุงุช ูู ุงูุฅุญุตุงุก ูุงูุจุฑูุฌุฉ ูุนูู ุงูุจูุงูุงุช',
            'ุงูุชูููุฉ': 'ูุนุธููุง ูุฌุงูู',
            'ุงููุบุฉ': 'ุงูุนุฑุจูุฉ'
        },
        {
            'ุงูููุตุฉ': 'ุฑูุงู',
            'ุงูุชุฎุตุต': 'ูุญุชูู ุนุฑุจู ูู ูุฌุงูุงุช ูุชุนุฏุฏุฉ ุจูุง ูููุง ุงูุงูุชุตุงุฏ ูุงูุฅุญุตุงุก',
            'ุงูุชูููุฉ': 'ูุฌุงูู ููุฏููุน',
            'ุงููุบุฉ': 'ุงูุนุฑุจูุฉ'
        }
    ]

    platforms_df = pd.DataFrame(platforms)
    st.table(platforms_df)

    # ุงูุดูุงุฏุงุช ุงูููููุฉ ุงููุนุชูุฏุฉ
    st.markdown("<h3>ุงูุดูุงุฏุงุช ุงูููููุฉ ุงููุนุชูุฏุฉ</h3>", unsafe_allow_html=True)

    certifications = [
        {
            'ุงูุดูุงุฏุฉ': 'Microsoft Certified: Data Analyst Associate',
            'ุงูุฌูุฉ': 'Microsoft',
            'ุงููุตู': 'ุชุคูุฏ ุงููุฏุฑุฉ ุนูู ุชุญููู ุงูุจูุงูุงุช ุจุงุณุชุฎุฏุงู Excel ูPower BI',
            'ุงููุฏุฉ ุงูุชูุฑูุจูุฉ ููุชุญุถูุฑ': '2-3 ุฃุดูุฑ'
        },
        {
            'ุงูุดูุงุฏุฉ': 'Google Data Analytics Professional Certificate',
            'ุงูุฌูุฉ': 'Google (via Coursera)',
            'ุงููุตู': 'ุชุบุทู ุฃุณุงุณูุงุช ุชุญููู ุงูุจูุงูุงุช ูู ุฌูุน ุงูุจูุงูุงุช ุฅูู ุชุตูุฑ ุงููุชุงุฆุฌ',
            'ุงููุฏุฉ ุงูุชูุฑูุจูุฉ ููุชุญุถูุฑ': '6 ุฃุดูุฑ'
        },
        {
            'ุงูุดูุงุฏุฉ': 'IBM Data Science Professional Certificate',
            'ุงูุฌูุฉ': 'IBM (via Coursera)',
            'ุงููุตู': 'ุดูุงุฏุฉ ุดุงููุฉ ูู ูุฌุงู ุนูู ุงูุจูุงูุงุช ุชุบุทู ุงูุชุญููู ูุงูุฎูุงุฑุฒููุงุช',
            'ุงููุฏุฉ ุงูุชูุฑูุจูุฉ ููุชุญุถูุฑ': '8-12 ุดูุฑ'
        },
        {
            'ุงูุดูุงุฏุฉ': 'Certified Data Scientist (CDS)',
            'ุงูุฌูุฉ': 'Data Science Council of America',
            'ุงููุตู': 'ุดูุงุฏุฉ ุงุญุชุฑุงููุฉ ุชุซุจุช ุงูููุงุกุฉ ูู ุนูู ุงูุจูุงูุงุช',
            'ุงููุฏุฉ ุงูุชูุฑูุจูุฉ ููุชุญุถูุฑ': '6-9 ุฃุดูุฑ'
        },
        {
            'ุงูุดูุงุฏุฉ': 'SAS Certified Data Scientist',
            'ุงูุฌูุฉ': 'SAS',
            'ุงููุตู': 'ุชุคูุฏ ุงูุฎุจุฑุฉ ูู ุชุญููู ุงูุจูุงูุงุช ุจุงุณุชุฎุฏุงู ููุชุฌุงุช SAS',
            'ุงููุฏุฉ ุงูุชูุฑูุจูุฉ ููุชุญุถูุฑ': '9-12 ุดูุฑ'
        },
        {
            'ุงูุดูุงุฏุฉ': 'Cloudera Certified Data Analyst',
            'ุงูุฌูุฉ': 'Cloudera',
            'ุงููุตู': 'ุชุฑูุฒ ุนูู ุชุญููู ุงูุจูุงูุงุช ุงููุจูุฑุฉ ุจุงุณุชุฎุฏุงู ูุธุงู Hadoop',
            'ุงููุฏุฉ ุงูุชูุฑูุจูุฉ ููุชุญุถูุฑ': '3-6 ุฃุดูุฑ'
        }
    ]

    cert_df = pd.DataFrame(certifications)
    st.table(cert_df)

    # ุฎุฑูุทุฉ ุงูุชุนูู ุงูููุชุฑุญุฉ
    st.markdown("<h3>ุฎุฑูุทุฉ ุงูุชุนูู ุงูููุชุฑุญุฉ ูููุจุชุฏุฆูู</h3>", unsafe_allow_html=True)

    col1, col2 = st.columns([3, 2])

    with col1:
        st.markdown("""
        **ุงููุฑุญูุฉ ุงูุฃููู (3-6 ุฃุดูุฑ): ุงูุฃุณุงุณูุงุช**
        - ุชุนูู ูุบุฉ ุจุฑูุฌุฉ ูุงุญุฏุฉ (Python ุฃู R)
        - ุฃุณุงุณูุงุช ุงูุฅุญุตุงุก ูุงูุงุญุชูุงูุงุช
        - ููุฏูุฉ ูู ููุงุนุฏ ุงูุจูุงูุงุช ูSQL
        - ุฃุณุงุณูุงุช ุงููุธุฑูุฉ ุงูุงูุชุตุงุฏูุฉ (ููููุชููู ุจุงูููุงุณ ุงูุงูุชุตุงุฏู)

        **ุงููุฑุญูุฉ ุงูุซุงููุฉ (3-6 ุฃุดูุฑ): ุงูุชุญููู ูุงูุงุณุชูุดุงู**
        - ุชุนูู ุฃุฏูุงุช ุชูุธูู ููุนุงูุฌุฉ ุงูุจูุงูุงุช
        - ุชุตูุฑ ุงูุจูุงูุงุช ูุงูุชุญููู ุงูุงุณุชูุดุงูู
        - ุชุทุจูู ุงูุงุฎุชุจุงุฑุงุช ุงูุฅุญุตุงุฆูุฉ
        - ููุฏูุฉ ูู ููุงุฐุฌ ุงูุงูุญุฏุงุฑ ูุชูููููุง

        **ุงููุฑุญูุฉ ุงูุซุงูุซุฉ (6-9 ุฃุดูุฑ): ุงูููุฐุฌุฉ ูุงูุชุทุจูู**
        - ุงูุชุนูู ุงูุขูู ุงูุฃุณุงุณู (ููููุชููู ุจุนูู ุงูุจูุงูุงุช)
        - ููุงุฐุฌ ุงูุณูุงุณู ุงูุฒูููุฉ (ููููุชููู ุจุงูููุงุณ ุงูุงูุชุตุงุฏู)
        - ุชุทุจููุงุช ุนูููุฉ ููุดุงุฑูุน ูุงูุนูุฉ
        - ุญู ูุดููุงุช ุนูููุฉ ุจุงุณุชุฎุฏุงู ุงูุจูุงูุงุช

        **ุงููุฑุญูุฉ ุงูุฑุงุจุนุฉ (ูุณุชูุฑุฉ): ุงูุชุฎุตุต**
        - ุงูุชุนูู ูู ูุฌุงู ูุญุฏุฏ (ุชููููุ ุตุญุฉุ ุชุณูููุ ุฅูุฎ)
        - ุงูุชุนูู ุงููุณุชูุฑ ูุงูุงุทูุงุน ุนูู ุฃุญุฏุซ ุงูุชูููุงุช
        - ุงููุดุงุฑูุฉ ูู ุงููุฌุชูุนุงุช ุงูููููุฉ ูุงูููุงูุณุงุช
        - ุจูุงุก ูุญูุธุฉ ูุดุงุฑูุน ูููุฉ
        """)

    with col2:
        # ุฅูุดุงุก ูุฎุทุท ุฒููู ููุชุนูู
        learning_timeline = {
            'ุงููุฑุญูุฉ': ['ุงูุฃุณุงุณูุงุช', 'ุงูุชุญููู', 'ุงูููุฐุฌุฉ', 'ุงูุชุฎุตุต'],
            'ุงูุจุฏุงูุฉ': [0, 6, 12, 18],
            'ุงูููุงูุฉ': [6, 12, 18, 24],
            'ุงูููุชุณุจุงุช': [3, 6, 8, 10]  # ููุงุท ูุชูุซูู ุงูููู ุงููุนุฑูู
        }

        df_timeline = pd.DataFrame(learning_timeline)

        fig = px.line(
            df_timeline,
            x='ุงูููุงูุฉ',
            y='ุงูููุชุณุจุงุช',
            text='ุงููุฑุญูุฉ',
            markers=True,
            line_shape='spline',
            title='ุชุทูุฑ ุงููุนุฑูุฉ ูุงูููุงุฑุงุช ูุน ุงูููุช'
        )

        fig.update_traces(
            textposition='top center',
            line=dict(color='#4361ee', width=3)
        )

        fig.update_layout(
            xaxis_title='ุงูุฃุดูุฑ',
            yaxis_title='ูุณุชูู ุงูููุงุฑุฉ',
            font=dict(family='Tajawal', size=14)
        )

        st.plotly_chart(fig, use_container_width=True)

        st.markdown("""
        **ููุงุญุธุฉ**: ูุฐู ุงูุฎุฑูุทุฉ ูุฑูุฉุ ููููู ุชุนุฏูููุง ุญุณุจ:
        - ุงูููุช ุงููุชุงุญ ููุชุนูู
        - ุงูุฎูููุฉ ุงููุนุฑููุฉ ุงูุณุงุจูุฉ
        - ุงูุฃูุฏุงู ุงูููููุฉ
        - ุงููุฌุงู ุงููุณุชูุฏู
        """)

# ุงูุชุจููุจ ุงูุฎุงูุณ: ุงูููุงุฑุงุช ุงููุทููุจุฉ
with tabs[4]:
    st.markdown("<h2>ุงูููุงุฑุงุช ุงููุทููุจุฉ ููุชููุฒ</h2>", unsafe_allow_html=True)

    # ุงูููุงุฑุงุช ุงูุชูููุฉ ูุงูููุงุฑุงุช ุงููุงุนูุฉ
    col1, col2 = st.columns(2)

    with col1:
        st.markdown("<h3>ุงูููุงุฑุงุช ุงูุชูููุฉ</h3>", unsafe_allow_html=True)

        technical_skills = {
            'ุงูุจุฑูุฌุฉ': [
                ('Python', 95),
                ('R', 90),
                ('SQL', 85),
                ('STATA/EViews', 75),
                ('Julia', 50)
            ],
            'ุงูุฅุญุตุงุก': [
                ('ุฅุญุตุงุก ุงุณุชุฏูุงูู', 95),
                ('ุงุฎุชุจุงุฑ ุงููุฑุถูุงุช', 90),
                ('ููุฐุฌุฉ ุฅุญุตุงุฆูุฉ', 90),
                ('ุชุตููู ุงูุชุฌุงุฑุจ', 80)
            ],
            'ุงูููุงุณ ุงูุงูุชุตุงุฏู': [
                ('ููุงุฐุฌ ุงูุงูุญุฏุงุฑ', 95),
                ('ุชุญููู ุงูุณูุงุณู ุงูุฒูููุฉ', 90),
                ('ุงูุชุตุงุฏ ููุงุณู ููููู', 80),
                ('ุทุฑู ููุงุณูุฉ ุบูุฑ ูุนูููุฉ', 70)
            ],
            'ุงูุชุนูู ุงูุขูู': [
                ('ุฎูุงุฑุฒููุงุช ุฎุงุถุนุฉ ููุฅุดุฑุงู', 90),
                ('ุฎูุงุฑุฒููุงุช ุบูุฑ ุฎุงุถุนุฉ ููุฅุดุฑุงู', 85),
                ('ุชุนูู ุนููู', 75),
                ('ุชุนูู ูุนุฒุฒ', 65)
            ],
            'ููุฏุณุฉ ุงูุจูุงูุงุช': [
                ('ูุนุงูุฌุฉ ุงูุจูุงูุงุช', 90),
                ('ุชุฎุฒูู ุงูุจูุงูุงุช', 80),
                ('ุชุญูููุงุช ุงูุจูุงูุงุช ุงููุจูุฑุฉ', 75),
                ('ุชุฏููุงุช ุงูุจูุงูุงุช', 70)
            ]
        }

        # ุฅูุดุงุก ูุฎุทุทุงุช ููููุงุฑุงุช ุงูุชูููุฉ
        skill_category = st.selectbox(
            'ุงุฎุชุฑ ูุฆุฉ ุงูููุงุฑุงุช ุงูุชูููุฉ:',
            list(technical_skills.keys())
        )

        selected_skills = technical_skills[skill_category]

        skills_df = pd.DataFrame({
            'ุงูููุงุฑุฉ': [s[0] for s in selected_skills],
            'ุงููุณุชูู': [s[1] for s in selected_skills]
        })

        fig = px.bar(
            skills_df,
            x='ุงููุณุชูู',
            y='ุงูููุงุฑุฉ',
            orientation='h',
            text='ุงููุณุชูู',
            title=f'ุฃูููุฉ ููุงุฑุงุช {skill_category}',
            color='ุงููุณุชูู',
            color_continuous_scale='blues'
        )

        fig.update_layout(
            font=dict(family='Tajawal', size=14),
            xaxis_title='ูุณุชูู ุงูุฃูููุฉ (100-0)'
        )

        st.plotly_chart(fig, use_container_width=True)

    with col2:
        st.markdown("<h3>ุงูููุงุฑุงุช ุงููุงุนูุฉ</h3>", unsafe_allow_html=True)

        soft_skills = [
            ('ุงูุชูููุฑ ุงูุชุญูููู', 95),
            ('ุงูุชูุงุตู ุงููุนุงู', 90),
            ('ุญู ุงููุดููุงุช', 90),
            ('ุงูุนูู ุงูุฌูุงุนู', 85),
            ('ุงููุถูู ุงูุนููู', 85),
            ('ุงูุชูุธูู ูุฅุฏุงุฑุฉ ุงูููุช', 80),
            ('ุงูุงุจุชูุงุฑ', 80),
            ('ุงูุชูููุฑ ุงูููุฏู', 90),
            ('ุชูุณูุฑ ุงููุชุงุฆุฌ ููุฌูููุฑ ุบูุฑ ุงูุชููู', 85),
            ('ุงููุฏุฑุฉ ุนูู ุงูุชุนูู ุงููุณุชูุฑ', 95)
        ]

        soft_skills_df = pd.DataFrame({
            'ุงูููุงุฑุฉ': [s[0] for s in soft_skills],
            'ุงูุฃูููุฉ': [s[1] for s in soft_skills]
        })

        fig = px.pie(
            soft_skills_df,
            values='ุงูุฃูููุฉ',
            names='ุงูููุงุฑุฉ',
            title='ุฃูููุฉ ุงูููุงุฑุงุช ุงููุงุนูุฉ',
            color_discrete_sequence=px.colors.sequential.Purples_r,
            hole=0.4
        )

        fig.update_layout(
            font=dict(family='Tajawal', size=14),
            legend=dict(
                orientation="v",
                yanchor="top",
                y=1,
                xanchor="left",
                x=-0.1
            )
        )

        st.plotly_chart(fig, use_container_width=True)

        st.markdown("""
        **ุฃูููุฉ ุงูููุงุฑุงุช ุงููุงุนูุฉ**:

        ุชุนุชุจุฑ ุงูููุงุฑุงุช ุงููุงุนูุฉ ุถุฑูุฑูุฉ ูููุฌุงุญ ูู ูุฌุงู ุงูููุงุณ ุงูุงูุชุตุงุฏู ูุนูู ุงูุจูุงูุงุช ููุฃุณุจุงุจ ุงูุชุงููุฉ:

        - **ุงูุชูุงุตู**: ุงููุฏุฑุฉ ุนูู ุดุฑุญ ุงููุชุงุฆุฌ ุงููุนูุฏุฉ ูุบูุฑ ุงููุชุฎุตุตูู
        - **ุงูุชูููุฑ ุงูููุฏู**: ุชูููู ุงูููุงูุฌ ูุงููุชุงุฆุฌ ุจููุถูุนูุฉ
        - **ุญู ุงููุดููุงุช**: ุชุญููู ุงููุดููุงุช ุงูุนูููุฉ ุฅูู ุฃุณุฆูุฉ ูููู ุญููุง ุจุงูุจูุงูุงุช
        - **ุงูุชุนูู ุงููุณุชูุฑ**: ุงููุฌุงู ูุชุทูุฑ ุจุณุฑุนุฉุ ูุงููุฏุฑุฉ ุนูู ุงูุชููู ุถุฑูุฑูุฉ
        """)

    # ุชูููู ุฐุงุชู ููููุงุฑุงุช
    st.markdown("<h3>ุฃุฏุงุฉ ุงูุชูููู ุงูุฐุงุชู ููููุงุฑุงุช</h3>", unsafe_allow_html=True)

    st.markdown("""
    ูููู ูุณุชูุงู ุงูุญุงูู ูู ุงูููุงุฑุงุช ุงูุฃุณุงุณูุฉ ูุชุญุฏูุฏ ุงููุฌุงูุงุช ุงูุชู ุชุญุชุงุฌ ุฅูู ุชุทููุฑ:
    """)

    # ุฅูุดุงุก ูุฌููุนุฉ ูู ุงูููุงุฑุงุช ููุชูููู
    skills_to_assess = [
        'ุงูุจุฑูุฌุฉ (Python/R)',
        'ุงูุฅุญุตุงุก ูุงูุงุญุชูุงูุงุช',
        'ููุงุฐุฌ ุงูููุงุณ ุงูุงูุชุตุงุฏู',
        'ุงูุชุนูู ุงูุขูู',
        'ุชุตูุฑ ุงูุจูุงูุงุช',
        'ููุงุนุฏ ุงูุจูุงูุงุช ูSQL',
        'ูุนุงูุฌุฉ ูุชูุธูู ุงูุจูุงูุงุช',
        'ุงูุชูุงุตู ูุนุฑุถ ุงููุชุงุฆุฌ'
    ]

    # ุฅูุดุงุก ุดุฑุงุฆุญ ุงูุชูููู
    user_ratings = {}

    col1, col2 = st.columns(2)

    for i, skill in enumerate(skills_to_assess):
        with col1 if i % 2 == 0 else col2:
            user_ratings[skill] = st.slider(
                f"{skill}",
                0, 100, 50,
                help="0 = ูุจุชุฏุฆุ 50 = ูุชูุณุทุ 100 = ุฎุจูุฑ"
            )

    # ุฅุธูุงุฑ ุงูููุงุฑุงุช ูู ูุฎุทุท ุฑุงุฏุงุฑู
    if user_ratings:
        radar_df = pd.DataFrame({
            'ุงูููุงุฑุฉ': list(user_ratings.keys()),
            'ุงููุณุชูู': list(user_ratings.values())
        })

        fig = px.line_polar(
            radar_df,
            r='ุงููุณุชูู',
            theta='ุงูููุงุฑุฉ',
            line_close=True,
            title='ุชููููู ุงูุฐุงุชู ููููุงุฑุงุช'
        )

        fig.update_traces(
            fill='toself',
            fillcolor='rgba(67, 97, 238, 0.3)',
            line=dict(color='#4361ee', width=3)
        )

        fig.update_layout(
            polar=dict(
                radialaxis=dict(
                    visible=True,
                    range=[0, 100]
                )
            ),
            font=dict(family='Tajawal', size=14)
        )

        st.plotly_chart(fig, use_container_width=True)

        # ุชูุฏูู ุชูุตูุงุช ุจูุงุกู ุนูู ุงูุชูููู
        st.markdown("<h4>ุชูุตูุงุช ุจูุงุกู ุนูู ุชููููู</h4>", unsafe_allow_html=True)

        weak_skills = [skill for skill, rating in user_ratings.items() if rating < 50]
        medium_skills = [skill for skill, rating in user_ratings.items() if 50 <= rating < 80]
        strong_skills = [skill for skill, rating in user_ratings.items() if rating >= 80]

        if weak_skills:
            st.markdown("<h5>ููุงุฑุงุช ุชุญุชุงุฌ ุฅูู ุชุทููุฑ:</h5>", unsafe_allow_html=True)
            for skill in weak_skills:
                st.markdown(f"- **{skill}**: ููุตู ุจุงูุจุฏุก ุจุฏูุฑุงุช ุฃุณุงุณูุฉ ูุชุฏุฑูุจุงุช ุนูููุฉ.")

        if medium_skills:
            st.markdown("<h5>ููุงุฑุงุช ูููู ุชุนุฒูุฒูุง:</h5>", unsafe_allow_html=True)
            for skill in medium_skills:
                st.markdown(f"- **{skill}**: ูููู ุงูุงูุชูุงู ุฅูู ุฏูุฑุงุช ูุชูุฏูุฉ ุฃู ูุดุงุฑูุน ูุงูุนูุฉ.")

        if strong_skills:
            st.markdown("<h5>ููุงุท ููุชู:</h5>", unsafe_allow_html=True)
            for skill in strong_skills:
                st.markdown(f"- **{skill}**: ููููู ุงูุขู ุงูุชุฎุตุต ุฃูุซุฑ ุฃู ูุณุงุนุฏุฉ ุงูุขุฎุฑูู ูู ุงูุชุนูู.")

    # ุชุทููุฑ ุงูููุงุฑุงุช ุญุณุจ ุงููุณุชูู
    st.markdown("<h3>ุชุทููุฑ ุงูููุงุฑุงุช ุญุณุจ ุงููุณุชูู</h3>", unsafe_allow_html=True)

    level_tabs = st.tabs(["ูุจุชุฏุฆ", "ูุชูุณุท", "ูุชูุฏู"])

    with level_tabs[0]:
        st.markdown("""
        **ููุงุฑุฏ ูููุณุชูู ุงููุจุชุฏุฆ**:

        **ุงูุจุฑูุฌุฉ**:
        - ุฏูุฑุฉ "Python for Everybody" ุนูู Coursera
        - ูุชุงุจ "Python Crash Course" ูู Eric Matthes
        - ุฏูุฑุฉ "R Programming" ูู Johns Hopkins ุนูู Coursera

        **ุงูุฅุญุตุงุก**:
        - ุฏูุฑุฉ "Statistics with R" ูู Duke University ุนูู Coursera
        - ูุชุงุจ "Introductory Statistics with R" ูู Peter Dalgaard

        **ุงูููุงุณ ุงูุงูุชุตุงุฏู ุงูุฃุณุงุณู**:
        - ุฏูุฑุฉ "Econometrics: Methods and Applications" ูู Erasmus University ุนูู Coursera
        - ูุชุงุจ "Introduction to Econometrics" ูู Stock and Watson

        **ุชุตูุฑ ุงูุจูุงูุงุช**:
        - ุฏูุฑุฉ "Data Visualization with Python" ุนูู Coursera
        - ุฏูุฑุงุช Tableau ุงูุฃุณุงุณูุฉ ุนูู ูููุนูู ุงูุฑุณูู
        """)

    with level_tabs[1]:
        st.markdown("""
        **ููุงุฑุฏ ูููุณุชูู ุงููุชูุณุท**:

        **ุงูุจุฑูุฌุฉ ุงููุชูุฏูุฉ**:
        - ูุชุงุจ "Python for Data Analysis" ูู Wes McKinney
        - ุฏูุฑุฉ "Advanced R Programming" ุนูู Coursera

        **ููุงุฐุฌ ุฅุญุตุงุฆูุฉ ูุชูุฏูุฉ**:
        - ุฏูุฑุฉ "Bayesian Statistics" ูู Duke University
        - ูุชุงุจ "Statistical Rethinking" ูู Richard McElreath

        **ุงูููุงุณ ุงูุงูุชุตุงุฏู ุงููุชูุณุท**:
        - ูุชุงุจ "Econometric Analysis" ูู Greene
        - ุฏูุฑุฉ "Econometrics: Methods and Applications" ูู Erasmus University Rotterdam

        **ุงูุชุนูู ุงูุขูู ุงูุฃุณุงุณู**:
        - ุฏูุฑุฉ "Machine Learning" ูู Stanford University ุนูู Coursera
        - ูุชุงุจ "Introduction to Statistical Learning" ูู James ูุขุฎุฑูู

        **ููุงุนุฏ ุงูุจูุงูุงุช**:
        - ุฏูุฑุฉ "SQL for Data Science" ุนูู Coursera
        - ูุชุงุจ "SQL in 10 Minutes a Day" ูู Ben Forta
        """)

    with level_tabs[2]:
        st.markdown("""
        **ููุงุฑุฏ ูููุณุชูู ุงููุชูุฏู**:

        **ุงูููุงุณ ุงูุงูุชุตุงุฏู ุงููุชูุฏู**:
        - ูุชุงุจ "Mostly Harmless Econometrics" ูู Angrist & Pischke
        - ูุชุงุจ "Microeconometrics" ูู Cameron & Trivedi
        - ุฃูุฑุงู ุจุญุซูุฉ ูู ูุฌูุงุช Journal of Econometrics ูEconometrica

        **ุงูุชุนูู ุงูุขูู ุงููุชูุฏู**:
        - ูุชุงุจ "Pattern Recognition and Machine Learning" ูู Bishop
        - ุฏูุฑุฉ "Deep Learning Specialization" ูู deeplearning.ai

        **ุชุญููู ุงูุณูุงุณู ุงูุฒูููุฉ ุงููุชูุฏู**:
        - ูุชุงุจ "Time Series Analysis" ูู Hamilton
        - ุฏูุฑุฉ "Financial Engineering and Risk Management" ูู Columbia University

        **ุงูุงูุชุตุงุฏ ุงูููุงุณู ูุจูุงูุงุช Panel**:
        - ูุชุงุจ "Econometric Analysis of Panel Data" ูู Baltagi

        **ุงูุจุฑูุฌุฉ ูุงูุชุทุจููุงุช ุงููุชูุฏูุฉ**:
        - ุฏูุฑุฉ "Big Data Analysis with Spark and Python" ุนูู edX
        - ูุชุงุจ "Advanced R" ูู Hadley Wickham
        """)

# ุงูุชุจููุจ ุงูุณุงุฏุณ: ุงููุตุงุฏุฑ ูุงููุฑุงุฌุน
with tabs[5]:
    st.markdown("<h2>ุงููุตุงุฏุฑ ูุงููุฑุงุฌุน</h2>", unsafe_allow_html=True)

    # ุชูุณูู ุงููุฑุงุฌุน ุฅูู ูุฆุงุช
    reference_tabs = st.tabs([
        "ูุชุจ",
        "ุฏูุฑุงุช ุฅููุชุฑูููุฉ",
        "ูููุงุช ููุชููุจ",
        "ููุงูุน ูููุชุฏูุงุช",
        "ูุฏููุงุช ููุดุฑุงุช"
    ])

    # ูุชุจ
    with reference_tabs[0]:
        st.markdown("<h3>ูุชุจ ูุฑุฌุนูุฉ ูู ุงูููุงุณ ุงูุงูุชุตุงุฏู ูุชุญููู ุงูุจูุงูุงุช</h3>", unsafe_allow_html=True)

        books = [
            {
                'ุงูุนููุงู': 'Introduction to Econometrics',
                'ุงููุคูู': 'Stock & Watson',
                'ุงููุณุชูู': 'ูุจุชุฏุฆ ุฅูู ูุชูุณุท',
                'ุงููุตู': 'ูุชุงุจ ููุงุณู ูุชุนููู ุฃุณุงุณูุงุช ุงูููุงุณ ุงูุงูุชุตุงุฏูุ ูุชููุฒ ุจุฃุณููุจ ุณูู ูุฃูุซูุฉ ุนูููุฉ.',
                'ุงูุชุตููู': 'ููุงุณ ุงูุชุตุงุฏู'
            },
            {
                'ุงูุนููุงู': 'Econometric Analysis',
                'ุงููุคูู': 'William H. Greene',
                'ุงููุณุชูู': 'ูุชูุณุท ุฅูู ูุชูุฏู',
                'ุงููุตู': 'ูุฑุฌุน ุดุงูู ูููุธุฑูุฉ ูุงูุชุทุจูู ูู ุงูุงูุชุตุงุฏ ุงูููุงุณูุ ูุซูุฑูุง ูุง ููุณุชุฎุฏู ูู ุงูุฏุฑุงุณุงุช ุงูุนููุง.',
                'ุงูุชุตููู': 'ููุงุณ ุงูุชุตุงุฏู'
            },
            {
                'ุงูุนููุงู': 'Mostly Harmless Econometrics',
                'ุงููุคูู': 'Angrist & Pischke',
                'ุงููุณุชูู': 'ูุชูุณุท ุฅูู ูุชูุฏู',
                'ุงููุตู': 'ูุชุงุจ ูููุฒ ูุฑูุฒ ุนูู ุฃุณุงููุจ ุชูููู ุงูุณุจุจูุฉ ูุงูุฃุซุฑ ูู ุงูุงูุชุตุงุฏ ุงูููุงุณู ุงูุชุทุจููู.',
                'ุงูุชุตููู': 'ููุงุณ ุงูุชุตุงุฏู'
            },
            {
                'ุงูุนููุงู': 'Time Series Analysis',
                'ุงููุคูู': 'James D. Hamilton',
                'ุงููุณุชูู': 'ูุชูุฏู',
                'ุงููุตู': 'ูุฑุฌุน ุฃุณุงุณู ูู ุชุญููู ุงูุณูุงุณู ุงูุฒูููุฉุ ูุบุทู ุงููุธุฑูุฉ ูุงูุชุทุจููุงุช ุจุนูู.',
                'ุงูุชุตููู': 'ููุงุณ ุงูุชุตุงุฏู'
            },
            {
                'ุงูุนููุงู': 'Python for Data Analysis',
                'ุงููุคูู': 'Wes McKinney',
                'ุงููุณุชูู': 'ูุจุชุฏุฆ ุฅูู ูุชูุณุท',
                'ุงููุตู': 'ุฏููู ุนููู ูุงุณุชุฎุฏุงู Python ูู ุชุญููู ุงูุจูุงูุงุชุ ููุชูุจ ูู ูุจู ูุทูุฑ Pandas.',
                'ุงูุชุตููู': 'ุชุญููู ุจูุงูุงุช'
            },
            {
                'ุงูุนููุงู': 'R for Data Science',
                'ุงููุคูู': 'Hadley Wickham & Garrett Grolemund',
                'ุงููุณุชูู': 'ูุจุชุฏุฆ ุฅูู ูุชูุณุท',
                'ุงููุตู': 'ุฏููู ุนููู ูุงุณุชุฎุฏุงู R ูู ุชุญููู ุงูุจูุงูุงุชุ ูุฑูุฒ ุนูู ุณูุฑ ุงูุนูู ุงูุชุญูููู.',
                'ุงูุชุตููู': 'ุชุญููู ุจูุงูุงุช'
            },
            {
                'ุงูุนููุงู': 'Introduction to Statistical Learning',
                'ุงููุคูู': 'James, Witten, Hastie & Tibshirani',
                'ุงููุณุชูู': 'ูุจุชุฏุฆ ุฅูู ูุชูุณุท',
                'ุงููุตู': 'ููุฏูุฉ ููุชุงุฒุฉ ููุชุนูู ุงูุขูู ุงูุฅุญุตุงุฆูุ ูุน ุฃูุซูุฉ ูู R.',
                'ุงูุชุตููู': 'ุนูู ุจูุงูุงุช'
            },
            {
                'ุงูุนููุงู': 'Pattern Recognition and Machine Learning',
                'ุงููุคูู': 'Christopher Bishop',
                'ุงููุณุชูู': 'ูุชูุฏู',
                'ุงููุตู': 'ูุฑุฌุน ุฃุณุงุณู ูู ุงูุชุนูู ุงูุขูู ูุงูุฅุญุตุงุก ุงูููุทูุ ูุน ุฃุณุงุณ ูุธุฑู ููู.',
                'ุงูุชุตููู': 'ุนูู ุจูุงูุงุช'
            },
            {
                'ุงูุนููุงู': 'Data Science for Business',
                'ุงููุคูู': 'Provost & Fawcett',
                'ุงููุณุชูู': 'ูุจุชุฏุฆ ุฅูู ูุชูุณุท',
                'ุงููุตู': 'ูุดุฑุญ ููุงููู ุนูู ุงูุจูุงูุงุช ูู ููุธูุฑ ุฃุนูุงูุ ูููุฏ ูุฑุจุท ุงูุชุญูููุงุช ุจุงููููุฉ ุงูุชุฌุงุฑูุฉ.',
                'ุงูุชุตููู': 'ุนูู ุจูุงูุงุช'
            },
            {
                'ุงูุนููุงู': 'ุงูุฅุญุตุงุก ููุงูุชุตุงุฏููู ูุงูุชุฌุงุฑููู',
                'ุงููุคูู': 'ุฏ. ูุญูุฏ ุตุจุญู ุฃุจู ุตุงูุญ',
                'ุงููุณุชูู': 'ูุจุชุฏุฆ',
                'ุงููุตู': 'ูุชุงุจ ุจุงููุบุฉ ุงูุนุฑุจูุฉ ูุดุฑุญ ุฃุณุงุณูุงุช ุงูุฅุญุตุงุก ููุงูุชุตุงุฏูููุ ูุน ุฃูุซูุฉ ุนูููุฉ.',
                'ุงูุชุตููู': 'ุฅุญุตุงุก'
            }
        ]

        books_df = pd.DataFrame(books)

        # ุชุตููุฉ ุงููุชุจ ุญุณุจ ุงูุชุตููู
        book_category = st.selectbox(
            "ุชุตููุฉ ุงููุชุจ ุญุณุจ ุงููุฌุงู:",
            ["ุงููู", "ููุงุณ ุงูุชุตุงุฏู", "ุชุญููู ุจูุงูุงุช", "ุนูู ุจูุงูุงุช", "ุฅุญุตุงุก"]
        )

        if book_category != "ุงููู":
            filtered_books = books_df[books_df['ุงูุชุตููู'] == book_category]
        else:
            filtered_books = books_df

        # ุนุฑุถ ุงููุชุจ ูู ุฌุฏูู
        st.table(filtered_books[['ุงูุนููุงู', 'ุงููุคูู', 'ุงููุณุชูู', 'ุงููุตู']])

    # ุฏูุฑุงุช ุฅููุชุฑูููุฉ
    with reference_tabs[1]:
        st.markdown("<h3>ุฏูุฑุงุช ุฅููุชุฑูููุฉ ููุตู ุจูุง</h3>", unsafe_allow_html=True)

        courses = [
            {
                'ุงูุนููุงู': 'Econometrics: Methods and Applications',
                'ุงูููุตุฉ': 'Coursera',
                'ุงูููุฏู': 'Erasmus University Rotterdam',
                'ุงููุณุชูู': 'ูุชูุณุท',
                'ุงููุฏุฉ': '8 ุฃุณุงุจูุน',
                'ุงูุฑุงุจุท': 'https://www.coursera.org/learn/erasmus-econometrics',
                'ุงูุชุตููู': 'ููุงุณ ุงูุชุตุงุฏู'
            },
            {
                'ุงูุนููุงู': 'Machine Learning',
                'ุงูููุตุฉ': 'Coursera',
                'ุงูููุฏู': 'Stanford University (Andrew Ng)',
                'ุงููุณุชูู': 'ูุจุชุฏุฆ ุฅูู ูุชูุณุท',
                'ุงููุฏุฉ': '11 ุฃุณุจูุน',
                'ุงูุฑุงุจุท': 'https://www.coursera.org/learn/machine-learning',
                'ุงูุชุตููู': 'ุนูู ุจูุงูุงุช'
            },
            {
                'ุงูุนููุงู': 'Data Science Specialization',
                'ุงูููุตุฉ': 'Coursera',
                'ุงูููุฏู': 'Johns Hopkins University',
                'ุงููุณุชูู': 'ูุจุชุฏุฆ ุฅูู ูุชูุณุท',
                'ุงููุฏุฉ': '10 ุฏูุฑุงุช (4-6 ุฃุดูุฑ)',
                'ุงูุฑุงุจุท': 'https://www.coursera.org/specializations/jhu-data-science',
                'ุงูุชุตููู': 'ุนูู ุจูุงูุงุช'
            },
            {
                'ุงูุนููุงู': 'Applied Econometrics',
                'ุงูููุตุฉ': 'edX',
                'ุงูููุฏู': 'MIT',
                'ุงููุณุชูู': 'ูุชูุณุท ุฅูู ูุชูุฏู',
                'ุงููุฏุฉ': '12 ุฃุณุจูุน',
                'ุงูุฑุงุจุท': 'https://www.edx.org/course/applied-econometrics',
                'ุงูุชุตููู': 'ููุงุณ ุงูุชุตุงุฏู'
            },
            {
                'ุงูุนููุงู': 'SQL for Data Science',
                'ุงูููุตุฉ': 'Coursera',
                'ุงูููุฏู': 'UC Davis',
                'ุงููุณุชูู': 'ูุจุชุฏุฆ',
                'ุงููุฏุฉ': '4 ุฃุณุงุจูุน',
                'ุงูุฑุงุจุท': 'https://www.coursera.org/learn/sql-for-data-science',
                'ุงูุชุตููู': 'ุชุญููู ุจูุงูุงุช'
            },
            {
                'ุงูุนููุงู': 'Deep Learning Specialization',
                'ุงูููุตุฉ': 'Coursera',
                'ุงูููุฏู': 'deeplearning.ai (Andrew Ng)',
                'ุงููุณุชูู': 'ูุชูุณุท ุฅูู ูุชูุฏู',
                'ุงููุฏุฉ': '5 ุฏูุฑุงุช (3-4 ุฃุดูุฑ)',
                'ุงูุฑุงุจุท': 'https://www.coursera.org/specializations/deep-learning',
                'ุงูุชุตููู': 'ุนูู ุจูุงูุงุช'
            },
            {
                'ุงูุนููุงู': 'Google Data Analytics Professional Certificate',
                'ุงูููุตุฉ': 'Coursera',
                'ุงูููุฏู': 'Google',
                'ุงููุณุชูู': 'ูุจุชุฏุฆ',
                'ุงููุฏุฉ': '6 ุฏูุฑุงุช (6 ุฃุดูุฑ)',
                'ุงูุฑุงุจุท': 'https://www.coursera.org/professional-certificates/google-data-analytics',
                'ุงูุชุตููู': 'ุชุญููู ุจูุงูุงุช'
            },
            {
                'ุงูุนููุงู': 'Linear Regression in R for Public Health',
                'ุงูููุตุฉ': 'Coursera',
                'ุงูููุฏู': 'Imperial College London',
                'ุงููุณุชูู': 'ูุชูุณุท',
                'ุงููุฏุฉ': '4 ุฃุณุงุจูุน',
                'ุงูุฑุงุจุท': 'https://www.coursera.org/learn/linear-regression-r-public-health',
                'ุงูุชุตููู': 'ููุงุณ ุงูุชุตุงุฏู'
            },
            {
                'ุงูุนููุงู': 'ููุฏูุฉ ูู ุนูู ุงูุจูุงูุงุช',
                'ุงูููุตุฉ': 'ุฅุฏุฑุงู',
                'ุงูููุฏู': 'ุฅุฏุฑุงู',
                'ุงููุณุชูู': 'ูุจุชุฏุฆ',
                'ุงููุฏุฉ': '6 ุฃุณุงุจูุน',
                'ุงูุฑุงุจุท': 'https://www.edraak.org/course/',
                'ุงูุชุตููู': 'ุนูู ุจูุงูุงุช'
            },
            {
                'ุงูุนููุงู': 'ุฃุณุงุณูุงุช ุงูุฅุญุตุงุก',
                'ุงูููุตุฉ': 'ุฑูุงู',
                'ุงูููุฏู': 'ุฌุงูุนุฉ ุงูููู ุณุนูุฏ',
                'ุงููุณุชูู': 'ูุจุชุฏุฆ',
                'ุงููุฏุฉ': '8 ุฃุณุงุจูุน',
                'ุงูุฑุงุจุท': 'https://www.rwaq.org/',
                'ุงูุชุตููู': 'ุฅุญุตุงุก'
            }
        ]

        courses_df = pd.DataFrame(courses)

        # ุชุตููุฉ ุงูุฏูุฑุงุช ุญุณุจ ุงูุชุตููู
        course_category = st.selectbox(
            "ุชุตููุฉ ุงูุฏูุฑุงุช ุญุณุจ ุงููุฌุงู:",
            ["ุงููู", "ููุงุณ ุงูุชุตุงุฏู", "ุชุญููู ุจูุงูุงุช", "ุนูู ุจูุงูุงุช", "ุฅุญุตุงุก"],
            key="course_cat_filter" # Added key for uniqueness
        )

        if course_category != "ุงููู":
            filtered_courses = courses_df[courses_df['ุงูุชุตููู'] == course_category]
        else:
            filtered_courses = courses_df

        # ุชุตููุฉ ุญุณุจ ุงููุณุชูู
        course_level = st.radio(
            "ุชุตููุฉ ุญุณุจ ุงููุณุชูู:",
            ["ุงููู", "ูุจุชุฏุฆ", "ูุชูุณุท", "ูุชูุฏู"],
            horizontal=True,
            key="course_level_filter" # Added key for uniqueness
        )

        if course_level != "ุงููู":
            filtered_courses = filtered_courses[filtered_courses['ุงููุณุชูู'].str.contains(course_level)]

        # ุนุฑุถ ุงูุฏูุฑุงุช ูู ุฌุฏูู
        st.table(filtered_courses[['ุงูุนููุงู', 'ุงูููุตุฉ', 'ุงูููุฏู', 'ุงููุณุชูู', 'ุงููุฏุฉ']])

    # ูููุงุช ููุชููุจ
    with reference_tabs[2]:
        st.markdown("<h3>ูููุงุช ููุชููุจ ุชุนููููุฉ ููุตู ุจูุง</h3>", unsafe_allow_html=True)

        youtube_channels = [
            {
                'ุงูููุงุฉ': 'StatQuest with Josh Starmer',
                'ุงููุญุชูู': 'ุดุฑุญ ูุจุณุท ููุฑุฆู ููููุงููู ุงูุฅุญุตุงุฆูุฉ ูุงูุชุนูู ุงูุขูู',
                'ุงููุบุฉ': 'ุงูุฅูุฌููุฒูุฉ',
                'ุงูุฑุงุจุท': 'https://www.youtube.com/c/joshstarmer',
                'ุงูุชุตููู': 'ุฅุญุตุงุกุ ุชุนูู ุขูู'
            },
            {
                'ุงูููุงุฉ': '3Blue1Brown',
                'ุงููุญุชูู': 'ุชุตูุฑุงุช ุฑุงุฆุนุฉ ููููุงููู ุงูุฑูุงุถูุฉ ุงููููุฉ ูู ุนูู ุงูุจูุงูุงุช',
                'ุงููุบุฉ': 'ุงูุฅูุฌููุฒูุฉ',
                'ุงูุฑุงุจุท': 'https://www.youtube.com/c/3blue1brown',
                'ุงูุชุตููู': 'ุฑูุงุถูุงุช'
            },
            {
                'ุงูููุงุฉ': 'Corey Schafer',
                'ุงููุญุชูู': 'ุฏุฑูุณ ุจุฑูุฌุฉ ุจูุบุฉ Python ูู ุงูุฃุณุงุณูุงุช ุฅูู ุงููุชูุฏู',
                'ุงููุบุฉ': 'ุงูุฅูุฌููุฒูุฉ',
                'ุงูุฑุงุจุท': 'https://www.youtube.com/c/Coreyms',
                'ุงูุชุตููู': 'ุจุฑูุฌุฉ'
            },
            {
                'ุงูููุงุฉ': 'sentdex',
                'ุงููุญุชูู': 'ุจุฑูุฌุฉ Python ูุน ุชุฑููุฒ ุนูู ุชุญููู ุงูุจูุงูุงุช ูุงูุชุนูู ุงูุขูู',
                'ุงููุบุฉ': 'ุงูุฅูุฌููุฒูุฉ',
                'ุงูุฑุงุจุท': 'https://www.youtube.com/c/sentdex',
                'ุงูุชุตููู': 'ุนูู ุจูุงูุงุชุ ุจุฑูุฌุฉ'
            },
            {
                'ุงูููุงุฉ': 'Krish Naik',
                'ุงููุญุชูู': 'ููุงุถูุน ูุฎุชููุฉ ูู ุนูู ุงูุจูุงูุงุช ูุงูุชุนูู ุงูุขูู ูุน ุงูุชุทุจููุงุช',
                'ุงููุบุฉ': 'ุงูุฅูุฌููุฒูุฉ',
                'ุงูุฑุงุจุท': 'https://www.youtube.com/user/krishnaik06',
                'ุงูุชุตููู': 'ุนูู ุจูุงูุงุช'
            },
            {
                'ุงูููุงุฉ': 'Ken Jee',
                'ุงููุญุชูู': 'ูุตุงุฆุญ ููููุฉ ูุฏุฑูุณ ุนูููุฉ ูู ุนูู ุงูุจูุงูุงุช',
                'ุงููุบุฉ': 'ุงูุฅูุฌููุฒูุฉ',
                'ุงูุฑุงุจุท': 'https://www.youtube.com/c/KenJee1',
                'ุงูุชุตููู': 'ุนูู ุจูุงูุงุช'
            },
            {
                'ุงูููุงุฉ': 'Econometrics Academy',
                'ุงููุญุชูู': 'ุฏุฑูุณ ูู ุงูููุงุณ ุงูุงูุชุตุงุฏู ูุงูุฅุญุตุงุก ูุชุทุจููุงุชูุง',
                'ุงููุบุฉ': 'ุงูุฅูุฌููุฒูุฉ',
                'ุงูุฑุงุจุท': 'https://www.youtube.com/c/BenLambertStats',
                'ุงูุชุตููู': 'ููุงุณ ุงูุชุตุงุฏู'
            },
            {
                'ุงูููุงุฉ': 'Keith Galli',
                'ุงููุญุชูู': 'ูุดุงุฑูุน ุนูููุฉ ูู ุชุญููู ุงูุจูุงูุงุช ุจุงุณุชุฎุฏุงู Python',
                'ุงููุบุฉ': 'ุงูุฅูุฌููุฒูุฉ',
                'ุงูุฑุงุจุท': 'https://www.youtube.com/c/KGMIT',
                'ุงูุชุตููู': 'ุชุญููู ุจูุงูุงุช'
            },
            {
                'ุงูููุงุฉ': 'codebasics',
                'ุงููุญุชูู': 'ุฏุฑูุณ ูู ุจุฑูุฌุฉ Python ูุนูู ุงูุจูุงูุงุช ูููุจุชุฏุฆูู',
                'ุงููุบุฉ': 'ุงูุฅูุฌููุฒูุฉ',
                'ุงูุฑุงุจุท': 'https://www.youtube.com/c/codebasics',
                'ุงูุชุตููู': 'ุนูู ุจูุงูุงุชุ ุจุฑูุฌุฉ'
            },
            {
                'ุงูููุงุฉ': 'ุฎูุงุฑุฒูู',
                'ุงููุญุชูู': 'ุฏุฑูุณ ุจุงููุบุฉ ุงูุนุฑุจูุฉ ูู ุงูุจุฑูุฌุฉ ูุนูู ุงูุจูุงูุงุช',
                'ุงููุบุฉ': 'ุงูุนุฑุจูุฉ',
                'ุงูุฑุงุจุท': 'https://www.youtube.com/channel/UCU46Gujh4q68ZmahPGNOJZw',
                'ุงูุชุตููู': 'ุนูู ุจูุงูุงุชุ ุจุฑูุฌุฉ'
            },
            {
                'ุงูููุงุฉ': 'ุฃูุงุฏูููุฉ ุญุณูุจ',
                'ุงููุญุชูู': 'ุฏุฑูุณ ุจุฑูุฌุฉ ุจุงููุบุฉ ุงูุนุฑุจูุฉ ุชุดูู ุจุงูุซูู ูููุงุนุฏ ุงูุจูุงูุงุช',
                'ุงููุบุฉ': 'ุงูุนุฑุจูุฉ',
                'ุงูุฑุงุจุท': 'https://www.youtube.com/c/HsoubAcademy',
                'ุงูุชุตููู': 'ุจุฑูุฌุฉ'
            },
            {
                'ุงูููุงุฉ': 'The Sound of AI',
                'ุงููุญุชูู': 'ุชุนูู ุขูู ูุชุนูู ุนููู ูุน ุชุทุจููุงุช ูู ูุนุงูุฌุฉ ุงูุตูุช',
                'ุงููุบุฉ': 'ุงูุฅูุฌููุฒูุฉ',
                'ุงูุฑุงุจุท': 'https://www.youtube.com/c/TheSoundofAI',
                'ุงูุชุตููู': 'ุนูู ุจูุงูุงุชุ ุชุนูู ุขูู'
            }
        ]

        youtube_df = pd.DataFrame(youtube_channels)

        # ุชุตููุฉ ุญุณุจ ุงููุบุฉ
        language = st.radio(
            "ุชุตููุฉ ุญุณุจ ุงููุบุฉ:",
            ["ุงููู", "ุงูุฅูุฌููุฒูุฉ", "ุงูุนุฑุจูุฉ"],
            horizontal=True,
            key="yt_lang_filter" # Added key for uniqueness
        )

        if language != "ุงููู":
            filtered_channels = youtube_df[youtube_df['ุงููุบุฉ'] == language]
        else:
            filtered_channels = youtube_df

        # ุชุตููุฉ ุญุณุจ ุงูุชุตููู
        channel_category = st.multiselect(
            "ุชุตููุฉ ุญุณุจ ุงููุญุชูู:",
            ["ุนูู ุจูุงูุงุช", "ุจุฑูุฌุฉ", "ุฅุญุตุงุก", "ุชุนูู ุขูู", "ููุงุณ ุงูุชุตุงุฏู", "ุฑูุงุถูุงุช"],
            default=[],
            key="yt_cat_filter" # Added key for uniqueness
        )

        if channel_category:
            # ุชุตููุฉ ุงููููุงุช ุงูุชู ุชุญุชูู ุนูู ุฃู ูู ุงูุชุตูููุงุช ุงููุฎุชุงุฑุฉ
            mask = filtered_channels['ุงูุชุตููู'].apply(lambda x: any(cat in x for cat in channel_category))
            filtered_channels = filtered_channels[mask]

        # ุนุฑุถ ุงููููุงุช ูู ุฌุฏูู
        st.table(filtered_channels[['ุงูููุงุฉ', 'ุงููุญุชูู', 'ุงููุบุฉ']])

    # ููุงูุน ูููุชุฏูุงุช
    with reference_tabs[3]:
        st.markdown("<h3>ููุงูุน ูููุชุฏูุงุช ูููุฏุฉ</h3>", unsafe_allow_html=True)

        websites = [
            {
                'ุงููููุน': 'Kaggle',
                'ุงููุตู': 'ููุตุฉ ููุณุงุจูุงุช ุนูู ุงูุจูุงูุงุชุ ุชููุฑ ุฏูุฑุงุช ูุฌุงููุฉ ููุฌููุนุงุช ุจูุงูุงุช ูููุฏ ููุชุนูู',
                'ุงูุฑุงุจุท': 'https://www.kaggle.com',
                'ุงูุชุตููู': 'ุนูู ุจูุงูุงุชุ ุชุนูู ุฐุงุชู'
            },
            {
                'ุงููููุน': 'Stack Overflow',
                'ุงููุตู': 'ููุชุฏู ูุฃุณุฆูุฉ ูุฃุฌูุจุฉ ุงูุจุฑูุฌุฉุ ูุญูู ุขูุงู ุงูุญููู ูููุดุงูู ุงูุจุฑูุฌูุฉ',
                'ุงูุฑุงุจุท': 'https://stackoverflow.com',
                'ุงูุชุตููู': 'ุจุฑูุฌุฉุ ุฏุนู ุชููู'
            },
            {
                'ุงููููุน': 'Cross Validated',
                'ุงููุตู': 'ููุชุฏู Stack Exchange ูุชุฎุตุต ูู ุงูุฅุญุตุงุก ูุงูุชุนูู ุงูุขูู',
                'ุงูุฑุงุจุท': 'https://stats.stackexchange.com',
                'ุงูุชุตููู': 'ุฅุญุตุงุกุ ุนูู ุจูุงูุงุช'
            },
            {
                'ุงููููุน': 'GitHub',
                'ุงููุตู': 'ููุตุฉ ุงุณุชุถุงูุฉ ุงูููุฏุ ุชุญูู ุขูุงู ุงููุดุงุฑูุน ููุชูุญุฉ ุงููุตุฏุฑ ููุชุนูู ูููุง',
                'ุงูุฑุงุจุท': 'https://github.com',
                'ุงูุชุตููู': 'ุจุฑูุฌุฉุ ูุดุงุฑูุน'
            },
            {
                'ุงููููุน': 'DataCamp',
                'ุงููุตู': 'ููุตุฉ ุชุนููููุฉ ูุชุฎุตุตุฉ ูู ุนูู ุงูุจูุงูุงุช ูุน ุฏูุฑุงุช ุชูุงุนููุฉ',
                'ุงูุฑุงุจุท': 'https://www.datacamp.com',
                'ุงูุชุตููู': 'ุนูู ุจูุงูุงุชุ ุชุนูู ุชูุงุนูู'
            },
            {
                'ุงููููุน': 'Econometrics Academy',
                'ุงููุตู': 'ูููุน ูุชุฎุตุต ูู ุชุนููู ุงูููุงุณ ุงูุงูุชุตุงุฏู ูุน ุดุฑูุญุงุช ููุตุงุฏุฑ ูุฌุงููุฉ',
                'ุงูุฑุงุจุท': 'https://sites.google.com/site/econometricsacademy',
                'ุงูุชุตููู': 'ููุงุณ ุงูุชุตุงุฏู'
            },
            {
                'ุงููููุน': 'Towards Data Science',
                'ุงููุตู': 'ููุตุฉ ูุดุฑ ููุงูุงุช ูุชุฎุตุตุฉ ูู ุนูู ุงูุจูุงูุงุช ูุงูุชุนูู ุงูุขูู',
                'ุงูุฑุงุจุท': 'https://towardsdatascience.com',
                'ุงูุชุตููู': 'ุนูู ุจูุงูุงุชุ ููุงูุงุช'
            },
            {
                'ุงููููุน': 'Real Python',
                'ุงููุตู': 'ููุงูุงุช ูุฏุฑูุณ ูุชุนููุฉ ูู ูุบุฉ Python ููุจุฑูุฌุฉ ูุชุญููู ุงูุจูุงูุงุช',
                'ุงูุฑุงุจุท': 'https://realpython.com',
                'ุงูุชุตููู': 'ุจุฑูุฌุฉ ุจุงูุซูู'
            },
            {
                'ุงููููุน': 'Data Science Central',
                'ุงููุตู': 'ููุตุฉ ูููุญุชูู ูุงูููุงุฑุฏ ุงููุชุนููุฉ ุจุนูู ุงูุจูุงูุงุช ูุงูุชุญูููุงุช',
                'ุงูุฑุงุจุท': 'https://www.datasciencecentral.com',
                'ุงูุชุตููู': 'ุนูู ุจูุงูุงุชุ ููุงูุงุช'
            },
            {
                'ุงููููุน': 'R-bloggers',
                'ุงููุตู': 'ูุฌููุนุฉ ููุงูุงุช ููุฏููุงุช ุญูู ุงุณุชุฎุฏุงู R ูู ุชุญููู ุงูุจูุงูุงุช',
                'ุงูุฑุงุจุท': 'https://www.r-bloggers.com',
                'ุงูุชุตููู': 'ุจุฑูุฌุฉ Rุ ุชุญููู ุจูุงูุงุช'
            },
            {
                'ุงููููุน': 'Analytics Vidhya',
                'ุงููุตู': 'ููุตุฉ ุชุนููููุฉ ูุชูุงููุฉ ูุนูู ุงูุจูุงูุงุช ูุงูุชุนูู ุงูุขูู',
                'ุงูุฑุงุจุท': 'https://www.analyticsvidhya.com',
                'ุงูุชุตููู': 'ุนูู ุจูุงูุงุชุ ุชุนูู ุขูู'
            },
            {
                'ุงููููุน': 'KDnuggets',
                'ุงููุตู': 'ูููุน ุฑุงุฆุฏ ูุฃุฎุจุงุฑ ูููุงูุงุช ุนูู ุงูุจูุงูุงุช ูุงูุชุนูู ุงูุขูู',
                'ุงูุฑุงุจุท': 'https://www.kdnuggets.com',
                'ุงูุชุตููู': 'ุนูู ุจูุงูุงุชุ ุฃุฎุจุงุฑ'
            }
        ]

        websites_df = pd.DataFrame(websites)

        # ุชุตููุฉ ุญุณุจ ุงูุชุตููู
        website_category = st.multiselect(
            "ุชุตููุฉ ุญุณุจ ุงูุชุตููู:",
            ["ุนูู ุจูุงูุงุช", "ุจุฑูุฌุฉ", "ุฅุญุตุงุก", "ููุงุณ ุงูุชุตุงุฏู", "ุชุนูู ุขูู", "ููุงูุงุช", "ุชุนูู ุฐุงุชู", "ุฏุนู ุชููู"],
            default=[],
            key="website_cat_filter" # Added key for uniqueness
        )

        if website_category:
            # ุชุตููุฉ ุงูููุงูุน ุงูุชู ุชุญุชูู ุนูู ุฃู ูู ุงูุชุตูููุงุช ุงููุฎุชุงุฑุฉ
            mask = websites_df['ุงูุชุตููู'].apply(lambda x: any(cat in x for cat in website_category))
            filtered_websites = websites_df[mask]
        else:
            filtered_websites = websites_df

        # ุนุฑุถ ุงูููุงูุน ูู ุฌุฏูู
        st.table(filtered_websites[['ุงููููุน', 'ุงููุตู', 'ุงูุชุตููู']])

    # ูุฏููุงุช ููุดุฑุงุช
    with reference_tabs[4]:
        st.markdown("<h3>ูุฏููุงุช ููุดุฑุงุช ุฅุฎุจุงุฑูุฉ ููุตู ุจูุง</h3>", unsafe_allow_html=True)

        blogs = [
            {
                'ุงููุฏููุฉ': 'Machine Learning Mastery',
                'ุงููุงุชุจ': 'Jason Brownlee',
                'ุงููุตู': 'ููุงูุงุช ุนูููุฉ ูููุฏ ูู ุงูุชุนูู ุงูุขูู ูุงูุชุนูู ุงูุนููู',
                'ุงูุฑุงุจุท': 'https://machinelearningmastery.com',
                'ุงูุชุตููู': 'ุชุนูู ุขููุ ุนููู'
            },
            {
                'ุงููุฏููุฉ': 'Simply Statistics',
                'ุงููุงุชุจ': 'Roger Peng, Jeff Leek, Rafa Irizarry',
                'ุงููุตู': 'ูุฏููุฉ ุฃูุงุฏูููุฉ ุชูุงูุด ููุงุถูุน ุงูุฅุญุตุงุก ูุนูู ุงูุจูุงูุงุช',
                'ุงูุฑุงุจุท': 'https://simplystatistics.org',
                'ุงูุชุตููู': 'ุฅุญุตุงุกุ ุฃูุงุฏููู'
            },
            {
                'ุงููุฏููุฉ': 'Statistical Modeling, Causal Inference, and Social Science',
                'ุงููุงุชุจ': 'Andrew Gelman',
                'ุงููุตู': 'ูุฏููุฉ ูุชุฎุตุตุฉ ูู ุงูููุฐุฌุฉ ุงูุฅุญุตุงุฆูุฉ ูุงูุงุณุชุฏูุงู ุงูุณุจุจู',
                'ุงูุฑุงุจุท': 'https://statmodeling.stat.columbia.edu',
                'ุงูุชุตููู': 'ุฅุญุตุงุกุ ููุงุณุ ุฃูุงุฏููู'
            },
            {
                'ุงููุฏููุฉ': 'The Data Scientist',
                'ุงููุงุชุจ': 'ูุชุนุฏุฏ ุงููุชูุงุจ',
                'ุงููุตู': 'ููุงูุงุช ุนูููุฉ ูุฅุฑุดุงุฏุงุช ูู ุนูู ุงูุจูุงูุงุช ูุงูุชุญูููุงุช',
                'ุงูุฑุงุจุท': 'https://thedatascientist.com',
                'ุงูุชุตููู': 'ุนูู ุจูุงูุงุชุ ุนููู'
            },
            {
                'ุงููุฏููุฉ': 'R-bloggers',
                'ุงููุงุชุจ': 'ูุฌุชูุน R',
                'ุงููุตู': 'ุชุฌููุน ูููุงูุงุช ุญูู ุงุณุชุฎุฏุงู R ูู ุงูุชุญููู ูุงูุฅุญุตุงุก',
                'ุงูุฑุงุจุท': 'https://www.r-bloggers.com',
                'ุงูุชุตููู': 'ุจุฑูุฌุฉ Rุ ุชุญููู'
            },
            {
                'ุงููุฏููุฉ': 'Data Science Weekly',
                'ุงููุงุชุจ': 'Hannah Brooks & Sebastian Gutierrez',
                'ุงููุตู': 'ูุดุฑุฉ ุฃุณุจูุนูุฉ ุจุฃูู ุงูููุงูุงุช ูุงูุฃุฎุจุงุฑ ูู ุนูู ุงูุจูุงูุงุช',
                'ุงูุฑุงุจุท': 'https://www.datascienceweekly.org',
                'ุงูุชุตููู': 'ุนูู ุจูุงูุงุชุ ูุดุฑุฉ'
            },
            {
                'ุงููุฏููุฉ': 'O\'Reilly Data Newsletter',
                'ุงููุงุชุจ': 'O\'Reilly Media',
                'ุงููุตู': 'ูุดุฑุฉ ูุชุฎุตุตุฉ ูู ุฃุฎุจุงุฑ ูุชุทูุฑุงุช ุนูู ุงูุจูุงูุงุช ูุงูุชุนูู ุงูุขูู',
                'ุงูุฑุงุจุท': 'https://www.oreilly.com/emails/newsletters/',
                'ุงูุชุตููู': 'ุนูู ุจูุงูุงุชุ ูุดุฑุฉ'
            },
            {
                'ุงููุฏููุฉ': 'Econometrics Beat',
                'ุงููุงุชุจ': 'Dave Giles',
                'ุงููุตู': 'ูุฏููุฉ ูุชุฎุตุตุฉ ูู ุงูููุงุณ ุงูุงูุชุตุงุฏู ูุงูุฅุญุตุงุก',
                'ุงูุฑุงุจุท': 'http://davegiles.blogspot.com',
                'ุงูุชุตููู': 'ููุงุณ ุงูุชุตุงุฏูุ ุฃูุงุฏููู'
            },
            {
                'ุงููุฏููุฉ': 'PyData',
                'ุงููุงุชุจ': 'ูุฌุชูุน PyData',
                'ุงููุตู': 'ูุฏููุฉ ูุฌุชูุน Python ูุชุญููู ุงูุจูุงูุงุช ูุงูุชุนูู ุงูุขูู',
                'ุงูุฑุงุจุท': 'https://pydata.org/blog',
                'ุงูุชุตููู': 'ุจุงูุซููุ ุนูู ุจูุงูุงุช'
            },
            {
                'ุงููุฏููุฉ': 'Flowing Data',
                'ุงููุงุชุจ': 'Nathan Yau',
                'ุงููุตู': 'ูุฏููุฉ ูุชุฎุตุตุฉ ูู ุชุตูุฑ ุงูุจูุงูุงุช ูุชุตููู ุงููุนูููุงุช',
                'ุงูุฑุงุจุท': 'https://flowingdata.com',
                'ุงูุชุตููู': 'ุชุตูุฑ ุจูุงูุงุชุ ุชุตููู'
            }
        ]

        blogs_df = pd.DataFrame(blogs)

        # ุชุตููุฉ ุญุณุจ ุงูุชุตููู
        blog_category = st.multiselect(
            "ุชุตููุฉ ุญุณุจ ุงูุชุตููู:",
            ["ุนูู ุจูุงูุงุช", "ุฅุญุตุงุก", "ุชุนูู ุขูู", "ููุงุณ ุงูุชุตุงุฏู", "ุจุฑูุฌุฉ", "ุชุตูุฑ ุจูุงูุงุช", "ูุดุฑุฉ", "ุฃูุงุฏููู", "ุนููู"],
            default=[],
            key="blog_cat_filter" # Added key for uniqueness
        )

        if blog_category:
            # ุชุตููุฉ ุงููุฏููุงุช ุงูุชู ุชุญุชูู ุนูู ุฃู ูู ุงูุชุตูููุงุช ุงููุฎุชุงุฑุฉ
            mask = blogs_df['ุงูุชุตููู'].apply(lambda x: any(cat in x for cat in blog_category))
            filtered_blogs = blogs_df[mask]
        else:
            filtered_blogs = blogs_df

        # ุนุฑุถ ุงููุฏููุงุช ูู ุฌุฏูู
        st.table(filtered_blogs[['ุงููุฏููุฉ', 'ุงููุงุชุจ', 'ุงููุตู', 'ุงูุชุตููู']])

# ูุณู ุฎุชุงูู
st.markdown("<hr>", unsafe_allow_html=True)
st.markdown("<h2 style='text-align: center;'>ูู ุชุญุชุงุฌ ุฅูู ูุณุงุนุฏุฉ ุฅุถุงููุฉุ</h2>", unsafe_allow_html=True)

# ูุฑุจุน ุงููุต ููุฃุณุฆูุฉ
user_question = st.text_area("ุงุทุฑุญ ุณุคุงููุง ูุญุฏุฏูุง ุญูู ุงูููุงุณ ุงูุงูุชุตุงุฏู ุฃู ุนูู ุงูุจูุงูุงุช:")

if user_question:
    st.info(
        "ููููู ุงูุจุญุซ ุนู ุฅุฌุงุจุงุช ููุตูุฉ ูู ุงููุตุงุฏุฑ ุงููุฐููุฑุฉ ุฃุนูุงูุ ุฃู ุทุฑุญ ุงูุณุคุงู ูู ุงูููุชุฏูุงุช ุงููุชุฎุตุตุฉ ูุซู Stack Overflow ุฃู Cross Validated.")

# ุฑุณุงูุฉ ุฎุชุงููุฉ ุชุญููุฒูุฉ
st.markdown("<div style='background-color: #e6f3ff; padding: 20px; border-radius: 10px; margin-top: 20px;'>",
            unsafe_allow_html=True)
st.markdown("<h3 style='text-align: center;'>ุฑุญูุฉ ุงูุฃูู ููู ุชุจุฏุฃ ุจุฎุทูุฉ</h3>", unsafe_allow_html=True)
st.markdown("""
<p style='text-align: center;'>
ุชุฐูุฑ ุฃู ุงูุชุฎุตุต ูู ุงูููุงุณ ุงูุงูุชุตุงุฏู ูุนูู ุงูุจูุงูุงุช ูู ุฑุญูุฉ ูุณุชูุฑุฉ ูู ุงูุชุนูู ูุงูุชุทุจูู.
ูุง ุชุชููู ุนู ุงูุชุนููุ ูุงุจุฏุฃ ุจูุดุงุฑูุน ุตุบูุฑุฉ ูุชุทุจูู ูุง ุชุชุนููู.
ุงูููุงุฑุณุฉ ุงููุณุชูุฑุฉ ูู ุงูููุชุงุญ ุงูุฃุณุงุณู ูููุฌุงุญ ูู ูุฐู ุงููุฌุงูุงุช.
</p>
""", unsafe_allow_html=True)
st.markdown("</div>", unsafe_allow_html=True)

# ูุนูููุงุช ุงูุชุทุจูู
st.markdown("<div style='text-align: center; margin-top: 30px; font-size: 12px; color: gray;'>", unsafe_allow_html=True)
st.markdown("ุชู ุชุทููุฑ ูุฐุง ุงูุชุทุจูู ุจุงุณุชุฎุฏุงู Python ู Streamlit ยฉ 2025", unsafe_allow_html=True)
st.markdown("</div>", unsafe_allow_html=True)
